{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CardFilterApp","file","setFile","useState","data","setData","filteredData","setFilteredData","loading","setLoading","filters","setFilters","series","numberFrom","numberTo","wishlistsFrom","wishlistsTo","editions","morphed","trimmed","frame","hasDyeName","tag","readFileContent","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsText","useEffect","processCSVData","csvText","Papa","parse","header","complete","results","console","async","window","fs","response","readFile","encoding","fsError","log","fetch","text","fetchError","loadExampleData","handleFilterChange","e","name","value","type","checked","_objectSpread","[object Object]","React","createElement","className","accept","onChange","uploadedFile","files","content","length","placeholder","Set","map","card","edition","sort","a","b","parseInt","key","onClick","newEditions","includes","index","indexOf","splice","push","handleEditionChange","concat","id","htmlFor","applyFilters","filter","toLowerCase","number","wishlists","resetFilters","copyCardCodes","codes","slice","code","join","navigator","clipboard","writeText","alert","disabled","downloadCardCodes","i","blob","Blob","url","URL","createObjectURL","document","href","download","body","appendChild","click","removeChild","revokeObjectURL","scope","character","quality","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.149715f8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\n\nconst CardFilterApp = () => {\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filters, setFilters] = useState({\n    series: '',\n    numberFrom: '',\n    numberTo: '',\n    wishlistsFrom: '',\n    wishlistsTo: '',\n    editions: [],\n    morphed: false,\n    trimmed: false,\n    frame: false,\n    hasDyeName: false,\n    tag: ''\n  });\n  \n  // Handle file upload\n  const handleFileUpload = async (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    if (uploadedFile) {\n      setLoading(true);\n      const content = await readFileContent(uploadedFile);\n      \n      Papa.parse(content, {\n        header: true,\n        complete: (results) => {\n          setData(results.data);\n          setFilteredData(results.data);\n          setLoading(false);\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n          setLoading(false);\n        }\n      });\n    }\n  };\n  \n  // Read file content\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (error) => reject(error);\n      reader.readAsText(file);\n    });\n  };\n  \n  // Load example data if no file is uploaded\n  useEffect(() => {\n    const loadExampleData = async () => {\n      try {\n        // First try to load from local file system if available\n        if (window.fs) {\n          try {\n            const response = await window.fs.readFile('paste.txt', { encoding: 'utf8' });\n            processCSVData(response);\n            return;\n          } catch (fsError) {\n            console.log('Could not load from fs, trying fetch', fsError);\n          }\n        }\n        \n        // Fallback to fetch API (for GitHub Pages)\n        try {\n          const response = await fetch('paste.txt');\n          const text = await response.text();\n          processCSVData(text);\n        } catch (fetchError) {\n          console.error('Error fetching example data:', fetchError);\n        }\n      } catch (error) {\n        console.error('Error loading example data:', error);\n      }\n    };\n    \n    const processCSVData = (csvText) => {\n      Papa.parse(csvText, {\n        header: true,\n        complete: (results) => {\n          setData(results.data);\n          setFilteredData(results.data);\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n        }\n      });\n    };\n    \n    if (!file) {\n      loadExampleData();\n    }\n  }, [file]);\n  \n  // Handle filter changes\n  const handleFilterChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    if (type === 'checkbox') {\n      setFilters({\n        ...filters,\n        [name]: checked\n      });\n    } else {\n      setFilters({\n        ...filters,\n        [name]: value\n      });\n    }\n  };\n  \n  // Handle edition selection\n  const handleEditionChange = (edition) => {\n    const newEditions = [...filters.editions];\n    \n    if (newEditions.includes(edition)) {\n      const index = newEditions.indexOf(edition);\n      newEditions.splice(index, 1);\n    } else {\n      newEditions.push(edition);\n    }\n    \n    setFilters({\n      ...filters,\n      editions: newEditions\n    });\n  };\n  \n  // Apply filters\n  const applyFilters = () => {\n    let results = [...data];\n    \n    // Filter by series\n    if (filters.series) {\n      results = results.filter(card => \n        card.series.toLowerCase().includes(filters.series.toLowerCase())\n      );\n    }\n    \n    // Filter by number range\n    if (filters.numberFrom) {\n      results = results.filter(card => \n        parseInt(card.number) >= parseInt(filters.numberFrom)\n      );\n    }\n    \n    if (filters.numberTo) {\n      results = results.filter(card => \n        parseInt(card.number) <= parseInt(filters.numberTo)\n      );\n    }\n    \n    // Filter by wishlists range\n    if (filters.wishlistsFrom) {\n      results = results.filter(card => \n        parseInt(card.wishlists) >= parseInt(filters.wishlistsFrom)\n      );\n    }\n    \n    if (filters.wishlistsTo) {\n      results = results.filter(card => \n        parseInt(card.wishlists) <= parseInt(filters.wishlistsTo)\n      );\n    }\n    \n    // Filter by editions\n    if (filters.editions.length > 0) {\n      results = results.filter(card => \n        filters.editions.includes(card.edition)\n      );\n    }\n    \n    // Filter by morphed\n    if (filters.morphed) {\n      results = results.filter(card => card.morphed === \"Yes\");\n    }\n    \n    // Filter by trimmed\n    if (filters.trimmed) {\n      results = results.filter(card => card.trimmed === \"Yes\");\n    }\n    \n    // Filter by frame\n    if (filters.frame) {\n      results = results.filter(card => card.frame !== \"\");\n    }\n    \n    // Filter by dye.name\n    if (filters.hasDyeName) {\n      results = results.filter(card => card[\"dye.name\"] !== \"\");\n    }\n    \n    // Filter by tag\n    if (filters.tag) {\n      results = results.filter(card => \n        card.tag.toLowerCase().includes(filters.tag.toLowerCase())\n      );\n    }\n    \n    setFilteredData(results);\n  };\n  \n  // Reset filters\n  const resetFilters = () => {\n    setFilters({\n      series: '',\n      numberFrom: '',\n      numberTo: '',\n      wishlistsFrom: '',\n      wishlistsTo: '',\n      editions: [],\n      morphed: false,\n      trimmed: false,\n      frame: false,\n      hasDyeName: false,\n      tag: ''\n    });\n    \n    setFilteredData(data);\n  };\n  \n  // Copy card codes to clipboard\n  const copyCardCodes = () => {\n    const codes = filteredData.slice(0, 50).map(card => card.code).join(', ');\n    navigator.clipboard.writeText(codes);\n    alert('Card codes copied to clipboard!');\n  };\n  \n  // Download card codes as text file\n  const downloadCardCodes = () => {\n    const maxCodesPerLine = 50;\n    let content = '';\n    \n    for (let i = 0; i < filteredData.length; i += maxCodesPerLine) {\n      const batch = filteredData.slice(i, i + maxCodesPerLine);\n      content += batch.map(card => card.code).join(', ') + '\\n';\n    }\n    \n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'card_codes.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  // Get unique editions\n  const getUniqueEditions = () => {\n    if (data.length === 0) return [];\n    \n    const editions = [...new Set(data.map(card => card.edition))];\n    return editions.sort((a, b) => parseInt(a) - parseInt(b));\n  };\n  \n  return (\n    <div className=\"p-4 max-w-6xl mx-auto bg-gray-50 min-h-screen\">\n      <h1 className=\"text-2xl font-bold mb-6 text-center text-blue-700\">Card Filter Application</h1>\n      \n      {/* File upload */}\n      <div className=\"mb-8 p-4 bg-white rounded-lg shadow\">\n        <h2 className=\"text-lg font-semibold mb-2\">Upload CSV File</h2>\n        <input \n          type=\"file\" \n          accept=\".csv, .txt\" \n          onChange={handleFileUpload} \n          className=\"mb-2 block w-full text-sm text-gray-500\n            file:mr-4 file:py-2 file:px-4\n            file:rounded-md file:border-0\n            file:text-sm file:font-semibold\n            file:bg-blue-50 file:text-blue-700\n            hover:file:bg-blue-100\"\n        />\n        {loading && <p className=\"text-gray-500\">Loading data...</p>}\n        {!loading && data.length > 0 && (\n          <p className=\"text-green-600\">Loaded {data.length} records.</p>\n        )}\n      </div>\n      \n      {/* Filters */}\n      <div className=\"mb-8 p-4 bg-white rounded-lg shadow grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <h2 className=\"text-lg font-semibold mb-2 col-span-full\">Filters</h2>\n        \n        {/* Series filter */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Series:\n          </label>\n          <input\n            type=\"text\"\n            name=\"series\"\n            value={filters.series}\n            onChange={handleFilterChange}\n            className=\"w-full p-2 border border-gray-300 rounded-md\"\n            placeholder=\"Enter series name...\"\n          />\n        </div>\n        \n        {/* Number range */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Number:\n          </label>\n          <div className=\"flex space-x-2\">\n            <input\n              type=\"number\"\n              name=\"numberFrom\"\n              value={filters.numberFrom}\n              onChange={handleFilterChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder=\"From\"\n            />\n            <input\n              type=\"number\"\n              name=\"numberTo\"\n              value={filters.numberTo}\n              onChange={handleFilterChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder=\"To\"\n            />\n          </div>\n        </div>\n        \n        {/* Wishlists range */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Wishlists:\n          </label>\n          <div className=\"flex space-x-2\">\n            <input\n              type=\"number\"\n              name=\"wishlistsFrom\"\n              value={filters.wishlistsFrom}\n              onChange={handleFilterChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder=\"From\"\n            />\n            <input\n              type=\"number\"\n              name=\"wishlistsTo\"\n              value={filters.wishlistsTo}\n              onChange={handleFilterChange}\n              className=\"w-full p-2 border border-gray-300 rounded-md\"\n              placeholder=\"To\"\n            />\n          </div>\n        </div>\n        \n        {/* Tag filter */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Tag:\n          </label>\n          <input\n            type=\"text\"\n            name=\"tag\"\n            value={filters.tag}\n            onChange={handleFilterChange}\n            className=\"w-full p-2 border border-gray-300 rounded-md\"\n            placeholder=\"Enter tag...\"\n          />\n        </div>\n        \n        {/* Editions */}\n        <div className=\"mb-4 col-span-1 md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Editions:\n          </label>\n          <div className=\"flex flex-wrap gap-2\">\n            {getUniqueEditions().map((edition) => (\n              <button\n                key={edition}\n                onClick={() => handleEditionChange(edition)}\n                className={`px-3 py-1 text-sm rounded-full ${\n                  filters.editions.includes(edition)\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-200 text-gray-700'\n                }`}\n              >\n                {edition}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        {/* Checkboxes */}\n        <div className=\"mb-4 col-span-1 md:col-span-2 lg:col-span-3 grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"morphed\"\n              name=\"morphed\"\n              checked={filters.morphed}\n              onChange={handleFilterChange}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"morphed\" className=\"ml-2 text-sm text-gray-700\">\n              Morphed\n            </label>\n          </div>\n          \n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"trimmed\"\n              name=\"trimmed\"\n              checked={filters.trimmed}\n              onChange={handleFilterChange}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"trimmed\" className=\"ml-2 text-sm text-gray-700\">\n              Trimmed\n            </label>\n          </div>\n          \n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"frame\"\n              name=\"frame\"\n              checked={filters.frame}\n              onChange={handleFilterChange}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"frame\" className=\"ml-2 text-sm text-gray-700\">\n              With Frame\n            </label>\n          </div>\n          \n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"hasDyeName\"\n              name=\"hasDyeName\"\n              checked={filters.hasDyeName}\n              onChange={handleFilterChange}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"hasDyeName\" className=\"ml-2 text-sm text-gray-700\">\n              With dye.name\n            </label>\n          </div>\n        </div>\n        \n        {/* Action buttons */}\n        <div className=\"col-span-full flex gap-2\">\n          <button\n            onClick={applyFilters}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md\"\n          >\n            Apply Filters\n          </button>\n          <button\n            onClick={resetFilters}\n            className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 py-2 px-4 rounded-md\"\n          >\n            Reset Filters\n          </button>\n        </div>\n      </div>\n      \n      {/* Results section */}\n      <div className=\"mb-8 p-4 bg-white rounded-lg shadow\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold\">Results ({filteredData.length})</h2>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={copyCardCodes}\n              disabled={filteredData.length === 0}\n              className={`py-2 px-4 rounded-md ${\n                filteredData.length === 0\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n            >\n              Copy Codes (max 50)\n            </button>\n            <button\n              onClick={downloadCardCodes}\n              disabled={filteredData.length === 0}\n              className={`py-2 px-4 rounded-md ${\n                filteredData.length === 0\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-purple-600 hover:bg-purple-700 text-white'\n              }`}\n            >\n              Download as .txt\n            </button>\n          </div>\n        </div>\n        \n        {/* Results table */}\n        {filteredData.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Code\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Number\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Edition\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Character\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Series\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Quality\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Wishlists\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Tag\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredData.slice(0, 100).map((card, index) => (\n                  <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600\">\n                      {card.code}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.edition}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.character}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.series}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.quality}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.wishlists}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {card.tag}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <p className=\"text-gray-500 text-center py-4\">No results matching the filter criteria.</p>\n        )}\n        \n        {filteredData.length > 100 && (\n          <p className=\"text-gray-500 text-sm mt-2\">Showing first 100 of {filteredData.length} records.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CardFilterApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}