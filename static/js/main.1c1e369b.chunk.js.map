{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CardFilterApp","file","setFile","useState","data","setData","filteredData","setFilteredData","displayData","setDisplayData","loading","setLoading","copyBatch","setCopyBatch","copiedAll","setCopiedAll","prefix","setPrefix","isDarkTheme","setIsDarkTheme","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","sortField","setSortField","sortDirection","setSortDirection","filters","setFilters","series","numberFrom","numberTo","wishlistsFrom","wishlistsTo","editions","morphed","trimmed","frame","hasDyeName","tag","noneTag","blacklistSeries","blacklistCharacter","blacklistTag","excludeFrame","excludeMorphed","excludeTrimmed","excludeDyeName","totalPages","Math","ceil","length","handleSort","field","useEffect","document","title","savedTheme","localStorage","getItem","applyTheme","dark","body","classList","add","remove","readFileContent","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsText","applyFilters","results","filter","card","toLowerCase","includes","parseInt","number","wishlists","edition","trim","blacklistedSeries","split","map","s","cardSeries","some","blacklistedCharacters","c","cardCharacter","character","blacklistedTags","t","cardTag","handleFilterChange","e","name","value","type","checked","_objectSpread","[object Object]","resetFilters","React","createElement","className","onChange","toggleTheme","newTheme","setItem","accept","async","uploadedFile","files","content","Papa","parse","header","complete","console","placeholder","disabled","onClick","concat","style","fontSize","marginTop","Set","sort","a","b","key","newEditions","index","indexOf","splice","push","handleEditionChange","id","htmlFor","justifyContent","marginBottom","copyCardCodes","totalBatches","startIndex","endIndex","min","cardsToCopy","slice","codes","code","join","navigator","clipboard","writeText","alert","newDisplayData","copiedCard","getCopyButtonText","copyCardCodesOneLine","downloadCardCodes","i","batch","blob","Blob","url","URL","createObjectURL","href","download","appendChild","click","removeChild","revokeObjectURL","downloadCardCodesOneLine","overflowX","maxHeight","overflowY","getCurrentPageItems","sortedData","aVal","bVal","localeCompare","getSortedData","color","fontWeight","quality","textAlign","padding","display","alignItems","gap","goToFirstPage","goToPreviousPage","prev","max","isNaN","width","goToNextPage","goToLastPage","marginLeft","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.1c1e369b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './styles.css';\n\nconst CardFilterApp = () => {\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [displayData, setDisplayData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [copyBatch, setCopyBatch] = useState(0);\n  const [copiedAll, setCopiedAll] = useState(false);\n  const [prefix, setPrefix] = useState('');\n  const [isDarkTheme, setIsDarkTheme] = useState(true); // Default to dark theme\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default 10 items per page\n  const [sortField, setSortField] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [filters, setFilters] = useState({\n    series: '',\n    numberFrom: '',\n    numberTo: '',\n    wishlistsFrom: '',\n    wishlistsTo: '',\n    editions: [],\n    morphed: false,\n    trimmed: false,\n    frame: false,\n    hasDyeName: false,\n    tag: '',\n    noneTag: false,\n    // Blacklist filters\n    blacklistSeries: '',\n    blacklistCharacter: '',\n    blacklistTag: '',\n    excludeFrame: false,\n    excludeMorphed: false,\n    excludeTrimmed: false,\n    excludeDyeName: false\n  });\n  \n  // Calculate the total number of pages\n  const totalPages = Math.ceil(displayData.length / itemsPerPage);\n  \n  // Sort function\n  const handleSort = (field) => {\n    // If clicking the same field, toggle direction or reset\n    if (sortField === field) {\n      if (sortDirection === 'asc') {\n        setSortDirection('desc');\n      } else {\n        // Reset sorting\n        setSortField(null);\n        setSortDirection('asc');\n      }\n    } else {\n      // New field, start with ascending\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  \n  // Apply sorting to data\n  const getSortedData = (data) => {\n    if (!sortField) return data;\n    \n    const sortedData = [...data];\n    \n    sortedData.sort((a, b) => {\n      // Handle numeric fields\n      if (['number', 'wishlists', 'edition'].includes(sortField)) {\n        const aVal = parseInt(a[sortField]) || 0;\n        const bVal = parseInt(b[sortField]) || 0;\n        \n        return sortDirection === 'asc' ? aVal - bVal : bVal - aVal;\n      }\n      \n      // Handle string fields\n      const aVal = a[sortField] || '';\n      const bVal = b[sortField] || '';\n      \n      if (sortDirection === 'asc') {\n        return aVal.localeCompare(bVal);\n      } else {\n        return bVal.localeCompare(aVal);\n      }\n    });\n    \n    return sortedData;\n  };\n  \n  // Get current page items\n  const getCurrentPageItems = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const sortedData = getSortedData(displayData);\n    return sortedData.slice(startIndex, endIndex);\n  };\n  \n  // Pagination controls\n  const goToFirstPage = () => setCurrentPage(1);\n  const goToPreviousPage = () => setCurrentPage(prev => Math.max(prev - 1, 1));\n  const goToNextPage = () => setCurrentPage(prev => Math.min(prev + 1, totalPages));\n  const goToLastPage = () => setCurrentPage(totalPages);\n  \n  // Handle direct page input\n  const handlePageInput = (e) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value >= 1 && value <= totalPages) {\n      setCurrentPage(value);\n    }\n  };\n  \n  // Handle items per page change\n  const handleItemsPerPageChange = (e) => {\n    const value = parseInt(e.target.value);\n    setItemsPerPage(value);\n    setCurrentPage(1); // Reset to first page when changing items per page\n  };\n  \n  // Set document title\n  useEffect(() => {\n    document.title = \"Karuta Cards Tool\";\n  }, []);\n  \n  // Theme toggle effect\n  useEffect(() => {\n    // Check if theme preference exists in localStorage\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkTheme(savedTheme === 'dark');\n    }\n    \n    // Apply theme class to document\n    applyTheme(savedTheme === 'dark' || (savedTheme === null && isDarkTheme));\n  }, []);\n  \n  // Function to apply the theme\n  const applyTheme = (dark) => {\n    if (dark) {\n      document.body.classList.add('dark-theme');\n    } else {\n      document.body.classList.remove('dark-theme');\n    }\n  };\n  \n  // Function to toggle theme\n  const toggleTheme = () => {\n    const newTheme = !isDarkTheme;\n    setIsDarkTheme(newTheme);\n    applyTheme(newTheme);\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n  };\n  \n  // Handle file upload\n  const handleFileUpload = async (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    if (uploadedFile) {\n      setLoading(true);\n      const content = await readFileContent(uploadedFile);\n      \n      Papa.parse(content, {\n        header: true,\n        complete: (results) => {\n          setData(results.data);\n          setFilteredData(results.data);\n          setDisplayData(results.data);\n          setLoading(false);\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n          setLoading(false);\n        }\n      });\n    }\n  };\n  \n  // Read file content\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (error) => reject(error);\n      reader.readAsText(file);\n    });\n  };\n  \n  // Initialize empty state - no automatic data loading\n  useEffect(() => {\n    // Only process data if a file has been selected by the user\n    if (file) {\n      const processCSVData = (csvText) => {\n        Papa.parse(csvText, {\n          header: true,\n          complete: (results) => {\n            setData(results.data);\n            setFilteredData(results.data);\n            setDisplayData(results.data);\n          },\n          error: (error) => {\n            console.error('Error parsing CSV:', error);\n          }\n        });\n      };\n      \n      // If needed in the future, process file data here\n    } else {\n      // Reset data states when no file is loaded\n      setData([]);\n      setFilteredData([]);\n      setDisplayData([]);\n    }\n  }, [file]);\n  \n  // Apply filters function\n  const applyFilters = () => {\n    let results = [...data];\n    \n    // Filter by series\n    if (filters.series) {\n      results = results.filter(card => \n        card.series.toLowerCase().includes(filters.series.toLowerCase())\n      );\n    }\n    \n    // Filter by number range\n    if (filters.numberFrom) {\n      results = results.filter(card => \n        parseInt(card.number) >= parseInt(filters.numberFrom)\n      );\n    }\n    \n    if (filters.numberTo) {\n      results = results.filter(card => \n        parseInt(card.number) <= parseInt(filters.numberTo)\n      );\n    }\n    \n    // Filter by wishlists range\n    if (filters.wishlistsFrom) {\n      results = results.filter(card => \n        parseInt(card.wishlists) >= parseInt(filters.wishlistsFrom)\n      );\n    }\n    \n    if (filters.wishlistsTo) {\n      results = results.filter(card => \n        parseInt(card.wishlists) <= parseInt(filters.wishlistsTo)\n      );\n    }\n    \n    // Filter by editions\n    if (filters.editions.length > 0) {\n      results = results.filter(card => \n        filters.editions.includes(card.edition)\n      );\n    }\n    \n    // Filter by morphed\n    if (filters.morphed) {\n      results = results.filter(card => card.morphed === \"Yes\");\n    }\n    \n    // Filter by trimmed\n    if (filters.trimmed) {\n      results = results.filter(card => card.trimmed === \"Yes\");\n    }\n    \n    // Filter by frame\n    if (filters.frame) {\n      results = results.filter(card => card.frame !== \"\");\n    }\n    \n    // Filter by dye.name\n    if (filters.hasDyeName) {\n      results = results.filter(card => card[\"dye.name\"] !== \"\");\n    }\n    \n    // Filter by tag\n    if (filters.tag) {\n      results = results.filter(card => \n        card.tag.toLowerCase().includes(filters.tag.toLowerCase())\n      );\n    }\n    \n    // Filter for cards with no tag\n    if (filters.noneTag) {\n      results = results.filter(card => \n        !card.tag || card.tag.trim() === ''\n      );\n    }\n    \n    // Apply blacklist filters\n    \n    // Blacklist series filter\n    if (filters.blacklistSeries) {\n      // Allow multiple series names separated by commas\n      const blacklistedSeries = filters.blacklistSeries.toLowerCase().split(',').map(s => s.trim());\n      results = results.filter(card => {\n        const cardSeries = card.series.toLowerCase();\n        return !blacklistedSeries.some(series => cardSeries.includes(series));\n      });\n    }\n    \n    // Blacklist character filter\n    if (filters.blacklistCharacter) {\n      // Allow multiple character names separated by commas\n      const blacklistedCharacters = filters.blacklistCharacter.toLowerCase().split(',').map(c => c.trim());\n      results = results.filter(card => {\n        const cardCharacter = card.character.toLowerCase();\n        return !blacklistedCharacters.some(character => cardCharacter.includes(character));\n      });\n    }\n    \n    // Blacklist tag filter\n    if (filters.blacklistTag) {\n      // Allow multiple tags separated by commas\n      const blacklistedTags = filters.blacklistTag.toLowerCase().split(',').map(t => t.trim());\n      results = results.filter(card => {\n        const cardTag = (card.tag || '').toLowerCase();\n        return !blacklistedTags.some(tag => cardTag.includes(tag));\n      });\n    }\n    \n    // Exclude cards with frame\n    if (filters.excludeFrame) {\n      results = results.filter(card => !card.frame || card.frame.trim() === '');\n    }\n    \n    // Exclude morphed cards\n    if (filters.excludeMorphed) {\n      results = results.filter(card => card.morphed !== \"Yes\");\n    }\n    \n    // Exclude trimmed cards\n    if (filters.excludeTrimmed) {\n      results = results.filter(card => card.trimmed !== \"Yes\");\n    }\n    \n    // Exclude cards with dye.name\n    if (filters.excludeDyeName) {\n      results = results.filter(card => !card[\"dye.name\"] || card[\"dye.name\"].trim() === '');\n    }\n    \n    setFilteredData(results);\n    setDisplayData(results);\n    // Reset pagination when filters change\n    setCurrentPage(1);\n    // Reset copy batch when filters change\n    setCopyBatch(0);\n    setCopiedAll(false);\n  };\n  \n  // Handle filter changes - back to manual filtering\n  const handleFilterChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    setFilters({\n      ...filters,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  \n  // Handle edition selection - back to manual filtering\n  const handleEditionChange = (edition) => {\n    const newEditions = [...filters.editions];\n    \n    if (newEditions.includes(edition)) {\n      const index = newEditions.indexOf(edition);\n      newEditions.splice(index, 1);\n    } else {\n      newEditions.push(edition);\n    }\n    \n    setFilters({\n      ...filters,\n      editions: newEditions\n    });\n  };\n  \n  // Reset filters\n  const resetFilters = () => {\n    setFilters({\n      series: '',\n      numberFrom: '',\n      numberTo: '',\n      wishlistsFrom: '',\n      wishlistsTo: '',\n      editions: [],\n      morphed: false,\n      trimmed: false,\n      frame: false,\n      hasDyeName: false,\n      tag: '',\n      noneTag: false,\n      // Reset blacklist filters\n      blacklistSeries: '',\n      blacklistCharacter: '',\n      blacklistTag: '',\n      excludeFrame: false,\n      excludeMorphed: false,\n      excludeTrimmed: false,\n      excludeDyeName: false\n    });\n    \n    // Reset sorting\n    setSortField(null);\n    setSortDirection('asc');\n    \n    setFilteredData(data);\n    setDisplayData(data);\n    setCopyBatch(0);\n    setCopiedAll(false);\n  };\n  \n  // Copy card codes to clipboard - updated to handle batches and remove copied cards\n  const copyCardCodes = () => {\n    const batchSize = 50;\n    const totalBatches = Math.ceil(filteredData.length / batchSize);\n    \n    // If we've copied all batches, reset to beginning and restore display\n    if (copyBatch >= totalBatches || copiedAll) {\n      setCopyBatch(0);\n      setCopiedAll(false);\n      setDisplayData([...filteredData]);\n      return;\n    }\n    \n    const startIndex = copyBatch * batchSize;\n    const endIndex = Math.min(startIndex + batchSize, filteredData.length);\n    const cardsToCopy = filteredData.slice(startIndex, endIndex);\n    \n    // Add prefix if it exists\n    let codes;\n    if (prefix.trim()) {\n      codes = cardsToCopy.map(card => `${prefix} ${card.code}`).join(', ');\n    } else {\n      codes = cardsToCopy.map(card => card.code).join(', ');\n    }\n    \n    navigator.clipboard.writeText(codes);\n    alert(`Copied codes ${startIndex+1}-${endIndex} of ${filteredData.length}`)\n    \n    // Remove copied cards from display\n    const newDisplayData = displayData.filter(card => \n      !cardsToCopy.some(copiedCard => copiedCard.code === card.code)\n    );\n    \n    setDisplayData(newDisplayData);\n    \n    // Move to next batch\n    setCopyBatch(copyBatch + 1);\n    \n    // If we've copied all, mark as completed\n    if (endIndex >= filteredData.length) {\n      setCopiedAll(true);\n    }\n  };\n\n  // Copy card codes to clipboard (one per line)\n  const copyCardCodesOneLine = () => {\n    const batchSize = 50;\n    const totalBatches = Math.ceil(filteredData.length / batchSize);\n    \n    // If we've copied all batches, reset to beginning and restore display\n    if (copyBatch >= totalBatches || copiedAll) {\n      setCopyBatch(0);\n      setCopiedAll(false);\n      setDisplayData([...filteredData]);\n      return;\n    }\n    \n    const startIndex = copyBatch * batchSize;\n    const endIndex = Math.min(startIndex + batchSize, filteredData.length);\n    const cardsToCopy = filteredData.slice(startIndex, endIndex);\n    \n    // Add prefix if it exists, one code per line\n    let codes;\n    if (prefix.trim()) {\n      codes = cardsToCopy.map(card => `${prefix} ${card.code}`).join('\\n');\n    } else {\n      codes = cardsToCopy.map(card => card.code).join('\\n');\n    }\n    \n    navigator.clipboard.writeText(codes);\n    alert(`Copied codes ${startIndex+1}-${endIndex} of ${filteredData.length} (one per line)`);\n    \n    // Remove copied cards from display\n    const newDisplayData = displayData.filter(card => \n      !cardsToCopy.some(copiedCard => copiedCard.code === card.code)\n    );\n    \n    setDisplayData(newDisplayData);\n    \n    // Move to next batch\n    setCopyBatch(copyBatch + 1);\n    \n    // If we've copied all, mark as completed\n    if (endIndex >= filteredData.length) {\n      setCopiedAll(true);\n    }\n  };\n  \n  // Download card codes as text file\n  const downloadCardCodes = () => {\n    const maxCodesPerLine = 50;\n    let content = '';\n    \n    for (let i = 0; i < filteredData.length; i += maxCodesPerLine) {\n      const batch = filteredData.slice(i, i + maxCodesPerLine);\n      \n      // Add prefix if it exists\n      if (prefix.trim()) {\n        content += prefix + ' ' + batch.map(card => card.code).join(', ') + '\\n';\n      } else {\n        content += batch.map(card => card.code).join(', ') + '\\n';\n      }\n    }\n    \n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'card_codes.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Download card codes as text file (one per line)\n  const downloadCardCodesOneLine = () => {\n    let content = '';\n    \n    // Add prefix if it exists, one code per line\n    if (prefix.trim()) {\n      content = filteredData.map(card => `${prefix} ${card.code}`).join('\\n');\n    } else {\n      content = filteredData.map(card => card.code).join('\\n');\n    }\n    \n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'card_codes_one_per_line.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  // Get unique editions\n  const getUniqueEditions = () => {\n    if (data.length === 0) return [];\n    \n    const editions = [...new Set(data.map(card => card.edition))];\n    return editions.sort((a, b) => parseInt(a) - parseInt(b));\n  };\n  \n  // Get copy button text\n  const getCopyButtonText = () => {\n    const batchSize = 50;\n    const totalBatches = Math.ceil(filteredData.length / batchSize);\n    \n    if (filteredData.length === 0) {\n      return \"Copy Codes (max 50)\";\n    }\n    \n    // If we've copied all batches or marked as copied all, show that we're starting over\n    if (copyBatch >= totalBatches || copiedAll) {\n      return \"Restore & Start Over\";\n    }\n    \n    const startIndex = copyBatch * batchSize;\n    const endIndex = Math.min(startIndex + batchSize, filteredData.length);\n    \n    return `Copy Codes (${startIndex}/${filteredData.length})`;\n  };\n  \n  return (\n    <div className=\"container\">\n      {/* Theme Toggle Switch */}\n      <div className=\"theme-switch-container\">\n        <span className=\"theme-icon\">☀️</span>\n        <label className=\"theme-switch\">\n          <input \n            type=\"checkbox\" \n            checked={isDarkTheme}\n            onChange={toggleTheme}\n          />\n          <span className=\"slider\"></span>\n        </label>\n        <span className=\"theme-icon\">🌙</span>\n      </div>\n      \n      <h1 className=\"header\">Card Filter Application</h1>\n      \n      {/* File upload */}\n      <div className=\"card\">\n        <h2>Upload CSV File</h2>\n        <input \n          type=\"file\" \n          accept=\".csv, .txt\" \n          onChange={handleFileUpload} \n          className=\"mb-2\"\n        />\n        {loading && <p>Loading data...</p>}\n        {!loading && data.length > 0 && (\n          <p className=\"text-success\">Loaded {data.length} records.</p>\n        )}\n        {!loading && data.length === 0 && !file && (\n          <p>No data loaded. Please upload a CSV or TXT file.</p>\n        )}\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\">Prefix for card codes:</label>\n          <input\n            type=\"text\"\n            value={prefix}\n            onChange={(e) => setPrefix(e.target.value)}\n            className=\"form-input\"\n            placeholder=\"Enter prefix (e.g. 'kt t1')\"\n          />\n          <p className=\"text-gray-500 text-sm mt-1\">\n            This text will be added before each card code when copying or downloading.\n          </p>\n        </div>\n      </div>\n      \n      {/* Filters card */}\n      <div className=\"card\">\n        <h2>Filters</h2>\n        \n        {/* Include filters section */}\n        <div className=\"filter-section\">\n          <h3 className=\"filter-section-title\">Include Filters</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Series:</label>\n            <input\n              type=\"text\"\n              name=\"series\"\n              value={filters.series}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter series name...\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Number:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                name=\"numberFrom\"\n                value={filters.numberFrom}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"From\"\n              />\n              <input\n                type=\"number\"\n                name=\"numberTo\"\n                value={filters.numberTo}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"To\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Wishlists:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                name=\"wishlistsFrom\"\n                value={filters.wishlistsFrom}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"From\"\n              />\n              <input\n                type=\"number\"\n                name=\"wishlistsTo\"\n                value={filters.wishlistsTo}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"To\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Tag:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"text\"\n                name=\"tag\"\n                value={filters.tag}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"Enter tag...\"\n                disabled={filters.noneTag}\n              />\n              <button\n                onClick={() => setFilters({...filters, noneTag: !filters.noneTag, tag: filters.noneTag ? filters.tag : ''})}\n                className={`btn ${filters.noneTag ? 'btn-primary' : 'btn-secondary'}`}\n                title=\"Show only cards with no tag\"\n              >\n                None Tag\n              </button>\n            </div>\n            {filters.noneTag && (\n              <p className=\"text-info\" style={{fontSize: \"0.75rem\", marginTop: \"0.25rem\"}}>\n                Showing only cards with no tag. Tag search is disabled.\n              </p>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Editions:</label>\n            <div className=\"flex flex-wrap gap-2\">\n              {getUniqueEditions().map((edition) => (\n                <button\n                  key={edition}\n                  onClick={() => handleEditionChange(edition)}\n                  className={`chip ${\n                    filters.editions.includes(edition)\n                      ? 'chip-blue'\n                      : 'chip-gray'\n                  }`}\n                >\n                  {edition}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"form-group\">\n            <div className=\"flex flex-wrap gap-2\">\n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"morphed\"\n                  name=\"morphed\"\n                  checked={filters.morphed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"morphed\" className=\"checkbox-label\">\n                  Morphed\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"trimmed\"\n                  name=\"trimmed\"\n                  checked={filters.trimmed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"trimmed\" className=\"checkbox-label\">\n                  Trimmed\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"frame\"\n                  name=\"frame\"\n                  checked={filters.frame}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"frame\" className=\"checkbox-label\">\n                  With Frame\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"hasDyeName\"\n                  name=\"hasDyeName\"\n                  checked={filters.hasDyeName}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"hasDyeName\" className=\"checkbox-label\">\n                  With dye.name\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex gap-2\" style={{marginTop: \"1rem\"}}>\n            <button\n              onClick={applyFilters}\n              className=\"btn btn-primary\"\n            >\n              Apply Filters\n            </button>\n            <button\n              onClick={resetFilters}\n              className=\"btn btn-secondary\"\n            >\n              Reset Filters\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"filter-section-divider\"></div>\n        \n        {/* Exclude filters section */}\n        <div className=\"filter-section\">\n          <h3 className=\"filter-section-title\">Exclude Filters (Blacklist)</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Exclude Series:</label>\n            <input\n              type=\"text\"\n              name=\"blacklistSeries\"\n              value={filters.blacklistSeries}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter series to exclude (comma-separated)\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Exclude Characters:</label>\n            <input\n              type=\"text\"\n              name=\"blacklistCharacter\"\n              value={filters.blacklistCharacter}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter characters to exclude (comma-separated)\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Exclude Tags:</label>\n            <input\n              type=\"text\"\n              name=\"blacklistTag\"\n              value={filters.blacklistTag}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter tags to exclude (comma-separated)\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <div className=\"flex flex-wrap gap-2\">\n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeFrame\"\n                  name=\"excludeFrame\"\n                  checked={filters.excludeFrame}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeFrame\" className=\"checkbox-label\">\n                  Exclude Cards with Frame\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeMorphed\"\n                  name=\"excludeMorphed\"\n                  checked={filters.excludeMorphed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeMorphed\" className=\"checkbox-label\">\n                  Exclude Morphed Cards\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeTrimmed\"\n                  name=\"excludeTrimmed\"\n                  checked={filters.excludeTrimmed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeTrimmed\" className=\"checkbox-label\">\n                  Exclude Trimmed Cards\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeDyeName\"\n                  name=\"excludeDyeName\"\n                  checked={filters.excludeDyeName}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeDyeName\" className=\"checkbox-label\">\n                  Exclude Cards with dye.name\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex gap-2\" style={{marginTop: \"1rem\"}}>\n            <button\n              onClick={applyFilters}\n              className=\"btn btn-primary\"\n            >\n              Apply Filters\n            </button>\n            <button\n              onClick={resetFilters}\n              className=\"btn btn-secondary\"\n            >\n              Reset Filters\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Results section */}\n      <div className=\"card\">\n        <div className=\"flex\" style={{justifyContent: \"space-between\", marginBottom: \"1rem\"}}>\n          <h2>Results {data.length > 0 ? `(${displayData.length}/${filteredData.length})` : \"\"}</h2>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={copyCardCodes}\n              disabled={filteredData.length === 0}\n              className={`btn ${\n                filteredData.length === 0\n                  ? 'btn-secondary'\n                  : 'btn-success'\n              }`}\n              title=\"Copy up to 50 codes separated by commas\"\n            >\n              {getCopyButtonText()}\n            </button>\n            <button\n              onClick={copyCardCodesOneLine}\n              disabled={filteredData.length === 0}\n              className={`btn ${\n                filteredData.length === 0\n                  ? 'btn-secondary'\n                  : 'btn-success'\n              }`}\n              title=\"Copy up to 50 codes with one code per line\"\n            >\n              Copy (1 per line)\n            </button>\n            <button\n              onClick={downloadCardCodes}\n              disabled={filteredData.length === 0}\n              className={`btn ${\n                filteredData.length === 0\n                  ? 'btn-secondary'\n                  : 'btn-purple'\n              }`}\n              title=\"Download with up to 50 codes per line\"\n            >\n              Download (50 max)\n            </button>\n            <button\n              onClick={downloadCardCodesOneLine}\n              disabled={filteredData.length === 0}\n              className={`btn ${\n                filteredData.length === 0\n                  ? 'btn-secondary'\n                  : 'btn-purple'\n              }`}\n              title=\"Download with one code per line\"\n            >\n              Download (1 per line)\n            </button>\n          </div>\n        </div>\n        \n        {/* Results table */}\n        {displayData.length > 0 ? (\n          <div style={{overflowX: \"auto\", maxHeight: \"500px\", overflowY: \"auto\"}}>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th onClick={() => handleSort('code')} className=\"sortable-header\">\n                    Code {sortField === 'code' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('number')} className=\"sortable-header\">\n                    Number {sortField === 'number' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('edition')} className=\"sortable-header\">\n                    Edition {sortField === 'edition' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('character')} className=\"sortable-header\">\n                    Character {sortField === 'character' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('series')} className=\"sortable-header\">\n                    Series {sortField === 'series' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('quality')} className=\"sortable-header\">\n                    Quality {sortField === 'quality' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('wishlists')} className=\"sortable-header\">\n                    Wishlists {sortField === 'wishlists' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('frame')} className=\"sortable-header\">\n                    Frame {sortField === 'frame' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                  <th onClick={() => handleSort('tag')} className=\"sortable-header\">\n                    Tag {sortField === 'tag' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {getCurrentPageItems().map((card, index) => (\n                  <tr key={index}>\n                    <td style={{color: \"#3b82f6\", fontWeight: 500}}>{card.code}</td>\n                    <td>{card.number}</td>\n                    <td>{card.edition}</td>\n                    <td>{card.character}</td>\n                    <td>{card.series}</td>\n                    <td>{card.quality}</td>\n                    <td>{card.wishlists}</td>\n                    <td>{card.frame || \"—\"}</td>\n                    <td>{card.tag}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <p style={{textAlign: \"center\", padding: \"1rem\"}}>\n            {file ? \"No results matching the filter criteria.\" : \"No data loaded. Please upload a file to see results.\"}\n          </p>\n        )}\n        \n        {/* Pagination controls */}\n        {displayData.length > 0 && (\n          <div className=\"pagination-container\" style={{marginTop: \"1rem\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"0.75rem\"}}>\n            <button \n              onClick={goToFirstPage} \n              disabled={currentPage === 1}\n              className={`btn ${currentPage === 1 ? 'btn-secondary' : 'btn-primary'}`}\n              title=\"First Page\"\n            >\n              &laquo;\n            </button>\n            <button \n              onClick={goToPreviousPage} \n              disabled={currentPage === 1}\n              className={`btn ${currentPage === 1 ? 'btn-secondary' : 'btn-primary'}`}\n              title=\"Previous Page\"\n            >\n              &lsaquo;\n            </button>\n            \n            <div style={{display: \"flex\", alignItems: \"center\", gap: \"0.5rem\"}}>\n              <span>Page</span>\n              <input \n                type=\"number\" \n                min=\"1\" \n                max={totalPages} \n                value={currentPage}\n                onChange={handlePageInput}\n                style={{width: \"50px\", textAlign: \"center\", padding: \"0.25rem\"}}\n                className=\"form-input\"\n              />\n              <span>of {totalPages}</span>\n            </div>\n            \n            <button \n              onClick={goToNextPage} \n              disabled={currentPage === totalPages}\n              className={`btn ${currentPage === totalPages ? 'btn-secondary' : 'btn-primary'}`}\n              title=\"Next Page\"\n            >\n              &rsaquo;\n            </button>\n            <button \n              onClick={goToLastPage} \n              disabled={currentPage === totalPages}\n              className={`btn ${currentPage === totalPages ? 'btn-secondary' : 'btn-primary'}`}\n              title=\"Last Page\"\n            >\n              &raquo;\n            </button>\n            \n            <div style={{marginLeft: \"1rem\", display: \"flex\", alignItems: \"center\", gap: \"0.5rem\"}}>\n              <span>Show</span>\n              <select \n                value={itemsPerPage} \n                onChange={handleItemsPerPageChange}\n                className=\"form-input\"\n                style={{padding: \"0.25rem\"}}\n              >\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n              </select>\n              <span>per page</span>\n            </div>\n          </div>\n        )}\n        \n        {filteredData.length !== displayData.length && (\n          <p style={{fontSize: \"0.875rem\", marginTop: \"0.5rem\", color: \"#3b82f6\"}}>\n            Displaying only {displayData.length} of {filteredData.length} records (remaining have already been copied).\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CardFilterApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}