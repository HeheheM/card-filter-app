{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CardFilterApp","file","setFile","useState","data","setData","filteredData","setFilteredData","loading","setLoading","filters","setFilters","series","numberFrom","numberTo","wishlistsFrom","wishlistsTo","editions","morphed","trimmed","frame","hasDyeName","tag","readFileContent","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsText","useEffect","processCSVData","csvText","Papa","parse","header","complete","results","console","async","window","fs","response","readFile","encoding","fsError","log","fetch","text","fetchError","loadExampleData","handleFilterChange","e","name","value","type","checked","_objectSpread","[object Object]","React","createElement","className","accept","onChange","uploadedFile","files","content","length","placeholder","Set","map","card","edition","sort","a","b","parseInt","key","onClick","newEditions","includes","index","indexOf","splice","push","handleEditionChange","concat","id","htmlFor","applyFilters","filter","toLowerCase","number","wishlists","resetFilters","style","justifyContent","marginBottom","copyCardCodes","codes","slice","code","join","navigator","clipboard","writeText","alert","disabled","downloadCardCodes","i","blob","Blob","url","URL","createObjectURL","document","href","download","body","appendChild","click","removeChild","revokeObjectURL","overflowX","color","fontWeight","character","quality","textAlign","padding","fontSize","marginTop","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.38cf3a6b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './styles.css';\n\nconst CardFilterApp = () => {\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filters, setFilters] = useState({\n    series: '',\n    numberFrom: '',\n    numberTo: '',\n    wishlistsFrom: '',\n    wishlistsTo: '',\n    editions: [],\n    morphed: false,\n    trimmed: false,\n    frame: false,\n    hasDyeName: false,\n    tag: ''\n  });\n  \n  // Handle file upload\n  const handleFileUpload = async (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    if (uploadedFile) {\n      setLoading(true);\n      const content = await readFileContent(uploadedFile);\n      \n      Papa.parse(content, {\n        header: true,\n        complete: (results) => {\n          setData(results.data);\n          setFilteredData(results.data);\n          setLoading(false);\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n          setLoading(false);\n        }\n      });\n    }\n  };\n  \n  // Read file content\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (error) => reject(error);\n      reader.readAsText(file);\n    });\n  };\n  \n  // Load example data if no file is uploaded\n  useEffect(() => {\n    const loadExampleData = async () => {\n      try {\n        // First try to load from local file system if available\n        if (window.fs) {\n          try {\n            const response = await window.fs.readFile('paste.txt', { encoding: 'utf8' });\n            processCSVData(response);\n            return;\n          } catch (fsError) {\n            console.log('Could not load from fs, trying fetch', fsError);\n          }\n        }\n        \n        // Fallback to fetch API (for GitHub Pages)\n        try {\n          const response = await fetch('paste.txt');\n          const text = await response.text();\n          processCSVData(text);\n        } catch (fetchError) {\n          console.error('Error fetching example data:', fetchError);\n        }\n      } catch (error) {\n        console.error('Error loading example data:', error);\n      }\n    };\n    \n    const processCSVData = (csvText) => {\n      Papa.parse(csvText, {\n        header: true,\n        complete: (results) => {\n          setData(results.data);\n          setFilteredData(results.data);\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n        }\n      });\n    };\n    \n    if (!file) {\n      loadExampleData();\n    }\n  }, [file]);\n  \n  // Handle filter changes\n  const handleFilterChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    if (type === 'checkbox') {\n      setFilters({\n        ...filters,\n        [name]: checked\n      });\n    } else {\n      setFilters({\n        ...filters,\n        [name]: value\n      });\n    }\n  };\n  \n  // Handle edition selection\n  const handleEditionChange = (edition) => {\n    const newEditions = [...filters.editions];\n    \n    if (newEditions.includes(edition)) {\n      const index = newEditions.indexOf(edition);\n      newEditions.splice(index, 1);\n    } else {\n      newEditions.push(edition);\n    }\n    \n    setFilters({\n      ...filters,\n      editions: newEditions\n    });\n  };\n  \n  // Apply filters\n  const applyFilters = () => {\n    let results = [...data];\n    \n    // Filter by series\n    if (filters.series) {\n      results = results.filter(card => \n        card.series.toLowerCase().includes(filters.series.toLowerCase())\n      );\n    }\n    \n    // Filter by number range\n    if (filters.numberFrom) {\n      results = results.filter(card => \n        parseInt(card.number) >= parseInt(filters.numberFrom)\n      );\n    }\n    \n    if (filters.numberTo) {\n      results = results.filter(card => \n        parseInt(card.number) <= parseInt(filters.numberTo)\n      );\n    }\n    \n    // Filter by wishlists range\n    if (filters.wishlistsFrom) {\n      results = results.filter(card => \n        parseInt(card.wishlists) >= parseInt(filters.wishlistsFrom)\n      );\n    }\n    \n    if (filters.wishlistsTo) {\n      results = results.filter(card => \n        parseInt(card.wishlists) <= parseInt(filters.wishlistsTo)\n      );\n    }\n    \n    // Filter by editions\n    if (filters.editions.length > 0) {\n      results = results.filter(card => \n        filters.editions.includes(card.edition)\n      );\n    }\n    \n    // Filter by morphed\n    if (filters.morphed) {\n      results = results.filter(card => card.morphed === \"Yes\");\n    }\n    \n    // Filter by trimmed\n    if (filters.trimmed) {\n      results = results.filter(card => card.trimmed === \"Yes\");\n    }\n    \n    // Filter by frame\n    if (filters.frame) {\n      results = results.filter(card => card.frame !== \"\");\n    }\n    \n    // Filter by dye.name\n    if (filters.hasDyeName) {\n      results = results.filter(card => card[\"dye.name\"] !== \"\");\n    }\n    \n    // Filter by tag\n    if (filters.tag) {\n      results = results.filter(card => \n        card.tag.toLowerCase().includes(filters.tag.toLowerCase())\n      );\n    }\n    \n    setFilteredData(results);\n  };\n  \n  // Reset filters\n  const resetFilters = () => {\n    setFilters({\n      series: '',\n      numberFrom: '',\n      numberTo: '',\n      wishlistsFrom: '',\n      wishlistsTo: '',\n      editions: [],\n      morphed: false,\n      trimmed: false,\n      frame: false,\n      hasDyeName: false,\n      tag: ''\n    });\n    \n    setFilteredData(data);\n  };\n  \n  // Copy card codes to clipboard\n  const copyCardCodes = () => {\n    const codes = filteredData.slice(0, 50).map(card => card.code).join(', ');\n    navigator.clipboard.writeText(codes);\n    alert('Card codes copied to clipboard!');\n  };\n  \n  // Download card codes as text file\n  const downloadCardCodes = () => {\n    const maxCodesPerLine = 50;\n    let content = '';\n    \n    for (let i = 0; i < filteredData.length; i += maxCodesPerLine) {\n      const batch = filteredData.slice(i, i + maxCodesPerLine);\n      content += batch.map(card => card.code).join(', ') + '\\n';\n    }\n    \n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'card_codes.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  // Get unique editions\n  const getUniqueEditions = () => {\n    if (data.length === 0) return [];\n    \n    const editions = [...new Set(data.map(card => card.edition))];\n    return editions.sort((a, b) => parseInt(a) - parseInt(b));\n  };\n  \n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Card Filter Application</h1>\n      \n      {/* File upload */}\n      <div className=\"card\">\n        <h2>Upload CSV File</h2>\n        <input \n          type=\"file\" \n          accept=\".csv, .txt\" \n          onChange={handleFileUpload} \n          className=\"mb-2\"\n        />\n        {loading && <p>Loading data...</p>}\n        {!loading && data.length > 0 && (\n          <p className=\"text-success\">Loaded {data.length} records.</p>\n        )}\n      </div>\n      \n      {/* Filters */}\n      <div className=\"card\">\n        <h2>Filters</h2>\n        <div className=\"form-group\">\n          <label className=\"form-label\">Series:</label>\n          <input\n            type=\"text\"\n            name=\"series\"\n            value={filters.series}\n            onChange={handleFilterChange}\n            className=\"form-input\"\n            placeholder=\"Enter series name...\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\">Number:</label>\n          <div className=\"flex gap-2\">\n            <input\n              type=\"number\"\n              name=\"numberFrom\"\n              value={filters.numberFrom}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"From\"\n            />\n            <input\n              type=\"number\"\n              name=\"numberTo\"\n              value={filters.numberTo}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"To\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\">Wishlists:</label>\n          <div className=\"flex gap-2\">\n            <input\n              type=\"number\"\n              name=\"wishlistsFrom\"\n              value={filters.wishlistsFrom}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"From\"\n            />\n            <input\n              type=\"number\"\n              name=\"wishlistsTo\"\n              value={filters.wishlistsTo}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"To\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\">Tag:</label>\n          <input\n            type=\"text\"\n            name=\"tag\"\n            value={filters.tag}\n            onChange={handleFilterChange}\n            className=\"form-input\"\n            placeholder=\"Enter tag...\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\">Editions:</label>\n          <div className=\"flex flex-wrap gap-2\">\n            {getUniqueEditions().map((edition) => (\n              <button\n                key={edition}\n                onClick={() => handleEditionChange(edition)}\n                className={`chip ${\n                  filters.editions.includes(edition)\n                    ? 'chip-blue'\n                    : 'chip-gray'\n                }`}\n              >\n                {edition}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <div className=\"flex flex-wrap gap-2\">\n            <div className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                id=\"morphed\"\n                name=\"morphed\"\n                checked={filters.morphed}\n                onChange={handleFilterChange}\n                className=\"checkbox\"\n              />\n              <label htmlFor=\"morphed\" className=\"checkbox-label\">\n                Morphed\n              </label>\n            </div>\n            \n            <div className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                id=\"trimmed\"\n                name=\"trimmed\"\n                checked={filters.trimmed}\n                onChange={handleFilterChange}\n                className=\"checkbox\"\n              />\n              <label htmlFor=\"trimmed\" className=\"checkbox-label\">\n                Trimmed\n              </label>\n            </div>\n            \n            <div className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                id=\"frame\"\n                name=\"frame\"\n                checked={filters.frame}\n                onChange={handleFilterChange}\n                className=\"checkbox\"\n              />\n              <label htmlFor=\"frame\" className=\"checkbox-label\">\n                With Frame\n              </label>\n            </div>\n            \n            <div className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                id=\"hasDyeName\"\n                name=\"hasDyeName\"\n                checked={filters.hasDyeName}\n                onChange={handleFilterChange}\n                className=\"checkbox\"\n              />\n              <label htmlFor=\"hasDyeName\" className=\"checkbox-label\">\n                With dye.name\n              </label>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <button\n            onClick={applyFilters}\n            className=\"btn btn-primary\"\n          >\n            Apply Filters\n          </button>\n          <button\n            onClick={resetFilters}\n            className=\"btn btn-secondary\"\n          >\n            Reset Filters\n          </button>\n        </div>\n      </div>\n      \n      {/* Results section */}\n      <div className=\"card\">\n        <div className=\"flex\" style={{justifyContent: \"space-between\", marginBottom: \"1rem\"}}>\n          <h2>Results ({filteredData.length})</h2>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={copyCardCodes}\n              disabled={filteredData.length === 0}\n              className={`btn ${\n                filteredData.length === 0\n                  ? 'btn-secondary'\n                  : 'btn-success'\n              }`}\n            >\n              Copy Codes (max 50)\n            </button>\n            <button\n              onClick={downloadCardCodes}\n              disabled={filteredData.length === 0}\n              className={`btn ${\n                filteredData.length === 0\n                  ? 'btn-secondary'\n                  : 'btn-purple'\n              }`}\n            >\n              Download as .txt\n            </button>\n          </div>\n        </div>\n        \n        {/* Results table */}\n        {filteredData.length > 0 ? (\n          <div style={{overflowX: \"auto\"}}>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Code</th>\n                  <th>Number</th>\n                  <th>Edition</th>\n                  <th>Character</th>\n                  <th>Series</th>\n                  <th>Quality</th>\n                  <th>Wishlists</th>\n                  <th>Tag</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredData.slice(0, 100).map((card, index) => (\n                  <tr key={index}>\n                    <td style={{color: \"#3b82f6\", fontWeight: 500}}>{card.code}</td>\n                    <td>{card.number}</td>\n                    <td>{card.edition}</td>\n                    <td>{card.character}</td>\n                    <td>{card.series}</td>\n                    <td>{card.quality}</td>\n                    <td>{card.wishlists}</td>\n                    <td>{card.tag}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <p style={{textAlign: \"center\", padding: \"1rem\"}}>No results matching the filter criteria.</p>\n        )}\n        \n        {filteredData.length > 100 && (\n          <p style={{fontSize: \"0.875rem\", marginTop: \"0.5rem\"}}>Showing first 100 of {filteredData.length} records.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CardFilterApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}