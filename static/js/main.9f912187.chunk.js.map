{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CardFilterApp","file","setFile","useState","data","setData","filteredData","setFilteredData","displayData","setDisplayData","loading","setLoading","copyBatch","setCopyBatch","singleCopyIndex","setSingleCopyIndex","copiedAll","setCopiedAll","singleCopiedAll","setSingleCopiedAll","prefix","setPrefix","isDarkTheme","setIsDarkTheme","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","sortField","setSortField","sortDirection","setSortDirection","csvUrl","setCsvUrl","inputMethod","setInputMethod","urlError","setUrlError","filters","setFilters","codes","series","numberFrom","numberTo","wishlistsFrom","wishlistsTo","editions","morphed","trimmed","frame","hasDyeName","tag","noneTag","blacklistSeries","blacklistCharacter","blacklistTag","excludeFrame","excludeMorphed","excludeTrimmed","excludeDyeName","notFoundCodes","setNotFoundCodes","totalPages","Math","ceil","length","handleSort","field","getCurrentPageItems","startIndex","endIndex","sortedData","sort","a","b","includes","aVal","parseInt","bVal","localeCompare","getSortedData","slice","goToFirstPage","goToPreviousPage","prev","max","goToNextPage","min","goToLastPage","handlePageInput","e","value","target","isNaN","handleItemsPerPageChange","useEffect","document","title","savedTheme","localStorage","getItem","applyTheme","dark","body","classList","add","remove","readFileContent","Promise","resolve","reject","reader","FileReader","onload","event","result","onerror","error","readAsText","applyFilters","results","trim","searchCodes","toLowerCase","split","map","code","filter","foundCodes","notFound","codeResults","forEach","searchCode","matchingCards","card","push","includedSeries","s","cardSeries","some","number","wishlists","edition","blacklistedSeries","blacklistedCharacters","c","cardCharacter","character","blacklistedTags","t","cardTag","handleFilterChange","name","type","checked","_objectSpread","[object Object]","resetFilters","copyCardCodes","totalBatches","cardsToCopy","concat","join","navigator","clipboard","writeText","alert","newDisplayData","copiedCard","copyCardCodesOneLine","cardToCopy","downloadCardCodes","content","i","batch","blob","Blob","url","URL","createObjectURL","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","downloadCardCodesOneLine","getCopyButtonText","getSingleCopyButtonText","React","className","onChange","toggleTheme","newTheme","setItem","id","htmlFor","accept","async","uploadedFile","files","Papa","parse","header","complete","console","placeholder","style","flex","onClick","endsWith","log","proxyUrl","encodeURIComponent","response","fetch","ok","Error","status","csvContent","text","errors","warn","message","disabled","fontSize","marginTop","Set","key","newEditions","index","indexOf","splice","handleEditionChange","justifyContent","marginBottom","alignItems","Fragment","overflowX","maxHeight","overflowY","color","fontWeight","quality","renderMobileCards","currentItems","textAlign","padding","display","gap","width","marginLeft","minWidth","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.9f912187.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './styles.css';\n\nconst CardFilterApp = () => {\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [displayData, setDisplayData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [copyBatch, setCopyBatch] = useState(0);\n  const [singleCopyIndex, setSingleCopyIndex] = useState(0);\n  const [copiedAll, setCopiedAll] = useState(false);\n  const [singleCopiedAll, setSingleCopiedAll] = useState(false);\n  const [prefix, setPrefix] = useState('');\n  const [isDarkTheme, setIsDarkTheme] = useState(true); // Default to dark theme\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default 10 items per page\n  const [sortField, setSortField] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [csvUrl, setCsvUrl] = useState('');\n  const [inputMethod, setInputMethod] = useState('file'); // 'file' or 'url'\n  const [urlError, setUrlError] = useState('');\n  const [filters, setFilters] = useState({\n    codes: '', // New field for card codes search\n    series: '',\n    numberFrom: '',\n    numberTo: '',\n    wishlistsFrom: '',\n    wishlistsTo: '',\n    editions: [],\n    morphed: false,\n    trimmed: false,\n    frame: false,\n    hasDyeName: false,\n    tag: '',\n    noneTag: false,\n    // Blacklist filters\n    blacklistSeries: '',\n    blacklistCharacter: '',\n    blacklistTag: '',\n    excludeFrame: false,\n    excludeMorphed: false,\n    excludeTrimmed: false,\n    excludeDyeName: false\n  });\n  const [notFoundCodes, setNotFoundCodes] = useState([]);\n  \n  // Calculate the total number of pages\n  const totalPages = Math.ceil(displayData.length / itemsPerPage);\n  \n  // Sort function\n  const handleSort = (field) => {\n    // If clicking the same field, toggle direction or reset\n    if (sortField === field) {\n      if (sortDirection === 'asc') {\n        setSortDirection('desc');\n      } else {\n        // Reset sorting\n        setSortField(null);\n        setSortDirection('asc');\n      }\n    } else {\n      // New field, start with ascending\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  \n  // Apply sorting to data\n  const getSortedData = (data) => {\n    if (!sortField) return data;\n    \n    const sortedData = [...data];\n    \n    sortedData.sort((a, b) => {\n      // Handle numeric fields\n      if (['number', 'wishlists', 'edition', 'worker.effort'].includes(sortField)) {\n        const aVal = parseInt(a[sortField]) || 0;\n        const bVal = parseInt(b[sortField]) || 0;\n        \n        return sortDirection === 'asc' ? aVal - bVal : bVal - aVal;\n      }\n      \n      // Handle string fields\n      const aVal = a[sortField] || '';\n      const bVal = b[sortField] || '';\n      \n      if (sortDirection === 'asc') {\n        return aVal.localeCompare(bVal);\n      } else {\n        return bVal.localeCompare(aVal);\n      }\n    });\n    \n    return sortedData;\n  };\n  \n  // Get current page items\n  const getCurrentPageItems = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const sortedData = getSortedData(displayData);\n    return sortedData.slice(startIndex, endIndex);\n  };\n  \n  // Pagination controls\n  const goToFirstPage = () => setCurrentPage(1);\n  const goToPreviousPage = () => setCurrentPage(prev => Math.max(prev - 1, 1));\n  const goToNextPage = () => setCurrentPage(prev => Math.min(prev + 1, totalPages));\n  const goToLastPage = () => setCurrentPage(totalPages);\n  \n  // Handle direct page input\n  const handlePageInput = (e) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value >= 1 && value <= totalPages) {\n      setCurrentPage(value);\n    }\n  };\n  \n  // Handle items per page change\n  const handleItemsPerPageChange = (e) => {\n    const value = parseInt(e.target.value);\n    setItemsPerPage(value);\n    setCurrentPage(1); // Reset to first page when changing items per page\n  };\n  \n  // Set document title\n  useEffect(() => {\n    document.title = \"Karuta Cards Tool\";\n  }, []);\n  \n  // Theme toggle effect\n  useEffect(() => {\n    // Check if theme preference exists in localStorage\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkTheme(savedTheme === 'dark');\n    }\n    \n    // Apply theme class to document\n    applyTheme(savedTheme === 'dark' || (savedTheme === null && isDarkTheme));\n  }, []);\n  \n  // Function to apply the theme\n  const applyTheme = (dark) => {\n    if (dark) {\n      document.body.classList.add('dark-theme');\n    } else {\n      document.body.classList.remove('dark-theme');\n    }\n  };\n  \n  // Function to toggle theme\n  const toggleTheme = () => {\n    const newTheme = !isDarkTheme;\n    setIsDarkTheme(newTheme);\n    applyTheme(newTheme);\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n  };\n  \n  // Handle file upload\n  const handleFileUpload = async (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    if (uploadedFile) {\n      setLoading(true);\n      setUrlError('');\n      const content = await readFileContent(uploadedFile);\n      \n      Papa.parse(content, {\n        header: true,\n        complete: (results) => {\n          setData(results.data);\n          setFilteredData(results.data);\n          setDisplayData(results.data);\n          setLoading(false);\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n          setLoading(false);\n        }\n      });\n    }\n  };\n  \n  // Handle URL input\n  const handleUrlLoad = async () => {\n    if (!csvUrl.trim()) {\n      setUrlError('Please enter a URL');\n      return;\n    }\n    \n    // Check if URL ends with .csv\n    if (!csvUrl.toLowerCase().endsWith('.csv')) {\n      setUrlError('URL must point to a .csv file');\n      return;\n    }\n    \n    setLoading(true);\n    setUrlError('');\n    setFile(null);\n    \n    try {\n      console.log('Loading CSV via proxy...');\n      \n      // Use working proxy directly\n      const proxyUrl = `https://api.codetabs.com/v1/proxy?quest=${encodeURIComponent(csvUrl)}`;\n      const response = await fetch(proxyUrl);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const csvContent = await response.text();\n      \n      // Check if content looks like CSV\n      if (!csvContent || csvContent.trim().length === 0) {\n        throw new Error('Empty file or invalid CSV content');\n      }\n      \n      // Check if it's actually CSV data (not an error page)\n      if (csvContent.includes('<html>') || csvContent.includes('<!DOCTYPE')) {\n        throw new Error('Received HTML instead of CSV data');\n      }\n      \n      Papa.parse(csvContent, {\n        header: true,\n        complete: (results) => {\n          if (results.errors && results.errors.length > 0) {\n            console.warn('CSV parsing warnings:', results.errors);\n          }\n          \n          if (!results.data || results.data.length === 0) {\n            setUrlError('No data found in CSV file');\n            setLoading(false);\n            return;\n          }\n          \n          setData(results.data);\n          setFilteredData(results.data);\n          setDisplayData(results.data);\n          setLoading(false);\n          console.log('✅ CSV loaded successfully!');\n        },\n        error: (error) => {\n          console.error('Error parsing CSV:', error);\n          setUrlError('Error parsing CSV file - please check if the file format is correct');\n          setLoading(false);\n        }\n      });\n      \n    } catch (error) {\n      console.error('❌ Error loading CSV:', error.message);\n      setUrlError(`❌ Unable to load CSV from URL: ${error.message}\\n\\n✅ Please try:\\n1. Check if the URL is correct and accessible\\n2. Download the file directly and use \"Upload File\"`);\n      setLoading(false);\n    }\n  };\n  \n  // Read file content\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (error) => reject(error);\n      reader.readAsText(file);\n    });\n  };\n  \n  // Initialize empty state - no automatic data loading\n  useEffect(() => {\n    // Only process data if a file has been selected by the user\n    if (file) {\n      const processCSVData = (csvText) => {\n        Papa.parse(csvText, {\n          header: true,\n          complete: (results) => {\n            setData(results.data);\n            setFilteredData(results.data);\n            setDisplayData(results.data);\n          },\n          error: (error) => {\n            console.error('Error parsing CSV:', error);\n          }\n        });\n      };\n      \n      // If needed in the future, process file data here\n    } else {\n      // Reset data states when no file is loaded\n      setData([]);\n      setFilteredData([]);\n      setDisplayData([]);\n    }\n  }, [file]);\n  \n  // Apply filters function\n  const applyFilters = () => {\n    let results = [...data];\n    \n    // Filter by card codes (if specified)\n    if (filters.codes.trim()) {\n      const searchCodes = filters.codes.toLowerCase().split(',').map(code => code.trim()).filter(code => code.length > 0);\n      const foundCodes = [];\n      const notFound = [];\n      \n      // Find cards that match the specified codes\n      const codeResults = [];\n      searchCodes.forEach(searchCode => {\n        const matchingCards = data.filter(card => card.code.toLowerCase() === searchCode);\n        if (matchingCards.length > 0) {\n          codeResults.push(...matchingCards);\n          foundCodes.push(searchCode);\n        } else {\n          notFound.push(searchCode);\n        }\n      });\n      \n      results = codeResults;\n      setNotFoundCodes(notFound);\n    } else {\n      setNotFoundCodes([]);\n    }\n    \n    // If codes filter is active, skip other filters (codes take priority)\n    if (!filters.codes.trim()) {\n      // Filter by series\n      if (filters.series) {\n        // Allow multiple series names separated by commas\n        const includedSeries = filters.series.toLowerCase().split(',').map(s => s.trim());\n        results = results.filter(card => {\n          const cardSeries = card.series.toLowerCase();\n          return includedSeries.some(series => cardSeries.includes(series));\n        });\n      }\n      \n      // Filter by number range\n      if (filters.numberFrom) {\n        results = results.filter(card => \n          parseInt(card.number) >= parseInt(filters.numberFrom)\n        );\n      }\n      \n      if (filters.numberTo) {\n        results = results.filter(card => \n          parseInt(card.number) <= parseInt(filters.numberTo)\n        );\n      }\n      \n      // Filter by wishlists range\n      if (filters.wishlistsFrom) {\n        results = results.filter(card => \n          parseInt(card.wishlists) >= parseInt(filters.wishlistsFrom)\n        );\n      }\n      \n      if (filters.wishlistsTo) {\n        results = results.filter(card => \n          parseInt(card.wishlists) <= parseInt(filters.wishlistsTo)\n        );\n      }\n      \n      // Filter by editions\n      if (filters.editions.length > 0) {\n        results = results.filter(card => \n          filters.editions.includes(card.edition)\n        );\n      }\n      \n      // Filter by morphed\n      if (filters.morphed) {\n        results = results.filter(card => card.morphed === \"Yes\");\n      }\n      \n      // Filter by trimmed\n      if (filters.trimmed) {\n        results = results.filter(card => card.trimmed === \"Yes\");\n      }\n      \n      // Filter by frame\n      if (filters.frame) {\n        results = results.filter(card => card.frame !== \"\");\n      }\n      \n      // Filter by dye.name\n      if (filters.hasDyeName) {\n        results = results.filter(card => card[\"dye.name\"] !== \"\");\n      }\n      \n      // Filter by tag\n      if (filters.tag) {\n        results = results.filter(card => \n          card.tag.toLowerCase().includes(filters.tag.toLowerCase())\n        );\n      }\n      \n      // Filter for cards with no tag\n      if (filters.noneTag) {\n        results = results.filter(card => \n          !card.tag || card.tag.trim() === ''\n        );\n      }\n      \n      // Apply blacklist filters\n      \n      // Blacklist series filter\n      if (filters.blacklistSeries) {\n        // Allow multiple series names separated by commas\n        const blacklistedSeries = filters.blacklistSeries.toLowerCase().split(',').map(s => s.trim());\n        results = results.filter(card => {\n          const cardSeries = card.series.toLowerCase();\n          return !blacklistedSeries.some(series => cardSeries.includes(series));\n        });\n      }\n      \n      // Blacklist character filter\n      if (filters.blacklistCharacter) {\n        // Allow multiple character names separated by commas\n        const blacklistedCharacters = filters.blacklistCharacter.toLowerCase().split(',').map(c => c.trim());\n        results = results.filter(card => {\n          const cardCharacter = card.character.toLowerCase();\n          return !blacklistedCharacters.some(character => cardCharacter.includes(character));\n        });\n      }\n      \n      // Blacklist tag filter\n      if (filters.blacklistTag) {\n        // Allow multiple tags separated by commas\n        const blacklistedTags = filters.blacklistTag.toLowerCase().split(',').map(t => t.trim());\n        results = results.filter(card => {\n          const cardTag = (card.tag || '').toLowerCase();\n          return !blacklistedTags.some(tag => cardTag.includes(tag));\n        });\n      }\n      \n      // Exclude cards with frame\n      if (filters.excludeFrame) {\n        results = results.filter(card => !card.frame || card.frame.trim() === '');\n      }\n      \n      // Exclude morphed cards\n      if (filters.excludeMorphed) {\n        results = results.filter(card => card.morphed !== \"Yes\");\n      }\n      \n      // Exclude trimmed cards\n      if (filters.excludeTrimmed) {\n        results = results.filter(card => card.trimmed !== \"Yes\");\n      }\n      \n      // Exclude cards with dye.name\n      if (filters.excludeDyeName) {\n        results = results.filter(card => !card[\"dye.name\"] || card[\"dye.name\"].trim() === '');\n      }\n    }\n    \n    setFilteredData(results);\n    setDisplayData(results);\n    // Reset pagination when filters change\n    setCurrentPage(1);\n    // Reset copy batch when filters change\n    setCopyBatch(0);\n    setCopiedAll(false);\n  };\n  \n  // Handle filter changes - back to manual filtering\n  const handleFilterChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    setFilters({\n      ...filters,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  \n  // Handle edition selection - back to manual filtering\n  const handleEditionChange = (edition) => {\n    const newEditions = [...filters.editions];\n    \n    if (newEditions.includes(edition)) {\n      const index = newEditions.indexOf(edition);\n      newEditions.splice(index, 1);\n    } else {\n      newEditions.push(edition);\n    }\n    \n    setFilters({\n      ...filters,\n      editions: newEditions\n    });\n  };\n  \n  // Reset filters\n  const resetFilters = () => {\n    setFilters({\n      codes: '', // Reset codes filter\n      series: '',\n      numberFrom: '',\n      numberTo: '',\n      wishlistsFrom: '',\n      wishlistsTo: '',\n      editions: [],\n      morphed: false,\n      trimmed: false,\n      frame: false,\n      hasDyeName: false,\n      tag: '',\n      noneTag: false,\n      // Reset blacklist filters\n      blacklistSeries: '',\n      blacklistCharacter: '',\n      blacklistTag: '',\n      excludeFrame: false,\n      excludeMorphed: false,\n      excludeTrimmed: false,\n      excludeDyeName: false\n    });\n    \n    // Reset sorting\n    setSortField(null);\n    setSortDirection('asc');\n    \n    // Clear not found codes\n    setNotFoundCodes([]);\n    \n    setFilteredData(data);\n    setDisplayData(data);\n    setCopyBatch(0);\n    setCopiedAll(false);\n    setSingleCopyIndex(0);\n    setSingleCopiedAll(false);\n  };\n  \n  // Copy card codes to clipboard - updated to handle batches and remove copied cards\n  const copyCardCodes = () => {\n    const batchSize = 50;\n    const totalBatches = Math.ceil(filteredData.length / batchSize);\n    \n    // If we've copied all batches, reset to beginning and restore display\n    if (copyBatch >= totalBatches || copiedAll) {\n      setCopyBatch(0);\n      setCopiedAll(false);\n      setDisplayData([...filteredData]);\n      return;\n    }\n    \n    const startIndex = copyBatch * batchSize;\n    const endIndex = Math.min(startIndex + batchSize, filteredData.length);\n    const cardsToCopy = filteredData.slice(startIndex, endIndex);\n    \n    // Add prefix if it exists\n    let codes;\n    if (prefix.trim()) {\n      codes = cardsToCopy.map(card => `${prefix} ${card.code}`).join(', ');\n    } else {\n      codes = cardsToCopy.map(card => card.code).join(', ');\n    }\n    \n    navigator.clipboard.writeText(codes);\n    alert(`Copied codes ${startIndex+1}-${endIndex} of ${filteredData.length}`)\n    \n    // Remove copied cards from display\n    const newDisplayData = displayData.filter(card => \n      !cardsToCopy.some(copiedCard => copiedCard.code === card.code)\n    );\n    \n    setDisplayData(newDisplayData);\n    \n    // Move to next batch\n    setCopyBatch(copyBatch + 1);\n    \n    // If we've copied all, mark as completed\n    if (endIndex >= filteredData.length) {\n      setCopiedAll(true);\n    }\n  };\n\n  // Copy card codes to clipboard (one card at a time)\n  const copyCardCodesOneLine = () => {\n    // If we've copied all cards, reset to beginning and restore display\n    if (filteredData.length === 0 || singleCopyIndex >= filteredData.length || singleCopiedAll) {\n      setSingleCopyIndex(0);\n      setSingleCopiedAll(false);\n      setDisplayData([...filteredData]);\n      return;\n    }\n    \n    // Get the single card to copy\n    const cardToCopy = filteredData[singleCopyIndex];\n    \n    // Add prefix if it exists, for a single code\n    let code;\n    if (prefix.trim()) {\n      code = `${prefix} ${cardToCopy.code}`;\n    } else {\n      code = cardToCopy.code;\n    }\n    \n    navigator.clipboard.writeText(code);\n    alert(`Copied code ${singleCopyIndex+1} of ${filteredData.length}: ${cardToCopy.code}`);\n    \n    // Remove only this copied card from display\n    const newDisplayData = displayData.filter(card => card.code !== cardToCopy.code);\n    setDisplayData(newDisplayData);\n    \n    // Move to next card\n    setSingleCopyIndex(singleCopyIndex + 1);\n    \n    // If we've copied all, mark as completed\n    if (singleCopyIndex + 1 >= filteredData.length) {\n      setSingleCopiedAll(true);\n    }\n  };\n  \n  // Download card codes as text file\n  const downloadCardCodes = () => {\n    const maxCodesPerLine = 50;\n    let content = '';\n    \n    for (let i = 0; i < filteredData.length; i += maxCodesPerLine) {\n      const batch = filteredData.slice(i, i + maxCodesPerLine);\n      \n      // Add prefix if it exists\n      if (prefix.trim()) {\n        content += prefix + ' ' + batch.map(card => card.code).join(', ') + '\\n';\n      } else {\n        content += batch.map(card => card.code).join(', ') + '\\n';\n      }\n    }\n    \n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'card_codes.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Download card codes as text file (one per line)\n  const downloadCardCodesOneLine = () => {\n    let content = '';\n    \n    // Add prefix if it exists, one code per line\n    if (prefix.trim()) {\n      content = filteredData.map(card => `${prefix} ${card.code}`).join('\\n');\n    } else {\n      content = filteredData.map(card => card.code).join('\\n');\n    }\n    \n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'card_codes_one_per_line.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  // Get unique editions\n  const getUniqueEditions = () => {\n    if (data.length === 0) return [];\n    \n    const editions = [...new Set(data.map(card => card.edition))];\n    return editions.sort((a, b) => parseInt(a) - parseInt(b));\n  };\n\n  // Render mobile card view\n  const renderMobileCards = () => {\n    const currentItems = getCurrentPageItems();\n    \n    return (\n      <div className=\"results-grid\">\n        {currentItems.map((card, index) => (\n          <div key={index} className=\"result-card\">\n            <div className=\"result-card-header\">\n              <div className=\"result-card-code\">{card.code}</div>\n              <div className=\"result-card-number\">#{card.number}</div>\n            </div>\n            \n            <div className=\"result-card-body\">\n              <div className=\"result-card-row\">\n                <span className=\"result-card-label\">Character:</span>\n                <span className=\"result-card-value\">{card.character}</span>\n              </div>\n              \n              <div className=\"result-card-row\">\n                <span className=\"result-card-label\">Series:</span>\n                <span className=\"result-card-value\">{card.series}</span>\n              </div>\n              \n              <div className=\"result-card-row\">\n                <span className=\"result-card-label\">Quality:</span>\n                <span className=\"result-card-value\">{card.quality}</span>\n              </div>\n              \n              <div className=\"result-card-row\">\n                <span className=\"result-card-label\">Edition:</span>\n                <span className=\"result-card-value\">{card.edition}</span>\n              </div>\n              \n              <div className=\"result-card-row\">\n                <span className=\"result-card-label\">Wishlists:</span>\n                <span className=\"result-card-value\">{card.wishlists}</span>\n              </div>\n              \n              {(card['worker.effort'] && card['worker.effort'] !== '0') && (\n                <div className=\"result-card-row\">\n                  <span className=\"result-card-label\">Worker Effort:</span>\n                  <span className=\"result-card-value\">{card['worker.effort']}</span>\n                </div>\n              )}\n              \n              {card.tag && (\n                <div className=\"result-card-row\">\n                  <span className=\"result-card-label\">Tag:</span>\n                  <span className=\"result-card-value\">{card.tag}</span>\n                </div>\n              )}\n            </div>\n            \n            {/* Badges for special properties */}\n            <div className=\"result-card-badges\">\n              {card.morphed === \"Yes\" && (\n                <span className=\"result-badge morphed\">Morphed</span>\n              )}\n              {card.trimmed === \"Yes\" && (\n                <span className=\"result-badge trimmed\">Trimmed</span>\n              )}\n              {card.frame && card.frame !== \"\" && (\n                <span className=\"result-badge frame\">Frame</span>\n              )}\n              {card[\"dye.name\"] && card[\"dye.name\"] !== \"\" && (\n                <span className=\"result-badge dye\">Dye</span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n  // Get copy button text\n  const getCopyButtonText = () => {\n    const batchSize = 50;\n    const totalBatches = Math.ceil(filteredData.length / batchSize);\n    \n    if (filteredData.length === 0) {\n      return \"Copy Codes (max 50)\";\n    }\n    \n    // If we've copied all batches or marked as copied all, show that we're starting over\n    if (copyBatch >= totalBatches || copiedAll) {\n      return \"Restore & Start Over\";\n    }\n    \n    const startIndex = copyBatch * batchSize;\n    const endIndex = Math.min(startIndex + batchSize, filteredData.length);\n    \n    return `Copy Codes (${startIndex}/${filteredData.length})`;\n  };\n  \n  // Get single copy button text\n  const getSingleCopyButtonText = () => {\n    if (filteredData.length === 0) {\n      return \"Copy Single Code\";\n    }\n    \n    // If we've copied all cards or marked as single copied all, show that we're starting over\n    if (singleCopyIndex >= filteredData.length || singleCopiedAll) {\n      return \"Restore & Start Over\";\n    }\n    \n    return `Copy Single Code (${singleCopyIndex}/${filteredData.length})`;\n  };\n  \n  return (\n    <div className=\"container\">\n      {/* Theme Toggle Switch */}\n      <div className=\"theme-switch-container\">\n        <span className=\"theme-icon\">☀️</span>\n        <label className=\"theme-switch\">\n          <input \n            type=\"checkbox\" \n            checked={isDarkTheme}\n            onChange={toggleTheme}\n          />\n          <span className=\"slider\"></span>\n        </label>\n        <span className=\"theme-icon\">🌙</span>\n      </div>\n      \n      <h1 className=\"header\">Card Filter Application</h1>\n      \n      {/* File upload */}\n      <div className=\"card\">\n        <h2>Load CSV Data</h2>\n        \n        {/* Input method selection */}\n        <div className=\"form-group\">\n          <label className=\"form-label\">Choose input method:</label>\n          <div className=\"flex mobile-horizontal gap-4\">\n            <div className=\"checkbox-container\">\n              <input\n                type=\"radio\"\n                id=\"file-method\"\n                name=\"input-method\"\n                checked={inputMethod === 'file'}\n                onChange={() => {\n                  setInputMethod('file');\n                  setCsvUrl('');\n                  setUrlError('');\n                }}\n                className=\"checkbox\"\n              />\n              <label htmlFor=\"file-method\" className=\"checkbox-label\">\n                Upload File\n              </label>\n            </div>\n            \n            <div className=\"checkbox-container\">\n              <input\n                type=\"radio\"\n                id=\"url-method\"\n                name=\"input-method\"\n                checked={inputMethod === 'url'}\n                onChange={() => {\n                  setInputMethod('url');\n                  setFile(null);\n                }}\n                className=\"checkbox\"\n              />\n              <label htmlFor=\"url-method\" className=\"checkbox-label\">\n                Load from URL\n              </label>\n            </div>\n          </div>\n        </div>\n        \n        {/* File upload section */}\n        {inputMethod === 'file' && (\n          <div className=\"form-group\">\n            <label className=\"form-label\">Select CSV or TXT file:</label>\n            <input \n              type=\"file\" \n              accept=\".csv, .txt\" \n              onChange={handleFileUpload} \n              className=\"form-input\"\n            />\n          </div>\n        )}\n        \n        {/* URL input section */}\n        {inputMethod === 'url' && (\n          <div className=\"form-group\">\n            <label className=\"form-label\">CSV file URL:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"url\"\n                value={csvUrl}\n                onChange={(e) => setCsvUrl(e.target.value)}\n                className=\"form-input\"\n                placeholder=\"https://example.com/file.csv\"\n                style={{flex: 1}}\n              />\n              <button\n                onClick={handleUrlLoad}\n                disabled={loading}\n                className=\"btn btn-primary mobile-inline\"\n              >\n                {loading ? 'Loading...' : 'Load CSV'}\n              </button>\n            </div>\n            <p className=\"text-gray-500 text-sm mt-1\">\n              Enter a direct link to a CSV file. The URL must end with .csv\n            </p>\n            {urlError && (\n              <div className=\"url-error\">\n                <p className=\"text-error\">\n                  {urlError}\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Loading and status messages */}\n        {loading && <p>Loading data...</p>}\n        {!loading && data.length > 0 && (\n          <p className=\"text-success\">Loaded {data.length} records.</p>\n        )}\n        {!loading && data.length === 0 && !file && !csvUrl && (\n          <p>No data loaded. Please upload a CSV/TXT file or provide a CSV URL.</p>\n        )}\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\">Prefix for card codes:</label>\n          <input\n            type=\"text\"\n            value={prefix}\n            onChange={(e) => setPrefix(e.target.value)}\n            className=\"form-input\"\n            placeholder=\"Enter prefix (e.g. 'kt t1')\"\n          />\n          <p className=\"text-gray-500 text-sm mt-1\">\n            This text will be added before each card code when copying or downloading.\n          </p>\n        </div>\n      </div>\n      \n      {/* Filters card */}\n      <div className=\"card\">\n        <h2>Filters</h2>\n        \n        {/* Include filters section */}\n        <div className=\"filter-section\">\n          <h3 className=\"filter-section-title\">Include Filters</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Search by Card Codes:</label>\n            <input\n              type=\"text\"\n              name=\"codes\"\n              value={filters.codes}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter card codes separated by commas (e.g., vpvh96n, vzgrgsx)\"\n            />\n            <p className=\"text-gray-500 text-sm mt-1\">\n              Search for specific cards by their codes. This will override other filters when used.\n            </p>\n            {notFoundCodes.length > 0 && (\n              <div className=\"not-found-codes\">\n                <p className=\"text-warning\">\n                  <strong>Not found codes:</strong> {notFoundCodes.join(', ')}\n                </p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Series:</label>\n            <input\n              type=\"text\"\n              name=\"series\"\n              value={filters.series}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter series names (comma-separated)\"\n              disabled={filters.codes.trim() !== ''}\n            />\n            {filters.series && filters.series.includes(',') && !filters.codes.trim() && (\n              <p className=\"text-info\" style={{fontSize: \"0.75rem\", marginTop: \"0.25rem\"}}>\n                Including series containing: {filters.series}\n              </p>\n            )}\n            {filters.codes.trim() && (\n              <p className=\"text-gray-500 text-sm mt-1\">\n                Disabled while using code search\n              </p>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Number:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                name=\"numberFrom\"\n                value={filters.numberFrom}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"From\"\n                disabled={filters.codes.trim() !== ''}\n              />\n              <input\n                type=\"number\"\n                name=\"numberTo\"\n                value={filters.numberTo}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"To\"\n                disabled={filters.codes.trim() !== ''}\n              />\n            </div>\n            {filters.codes.trim() && (\n              <p className=\"text-gray-500 text-sm mt-1\">\n                Disabled while using code search\n              </p>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Wishlists:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                name=\"wishlistsFrom\"\n                value={filters.wishlistsFrom}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"From\"\n                disabled={filters.codes.trim() !== ''}\n              />\n              <input\n                type=\"number\"\n                name=\"wishlistsTo\"\n                value={filters.wishlistsTo}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"To\"\n                disabled={filters.codes.trim() !== ''}\n              />\n            </div>\n            {filters.codes.trim() && (\n              <p className=\"text-gray-500 text-sm mt-1\">\n                Disabled while using code search\n              </p>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Tag:</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"text\"\n                name=\"tag\"\n                value={filters.tag}\n                onChange={handleFilterChange}\n                className=\"form-input\"\n                placeholder=\"Enter tag...\"\n                disabled={filters.noneTag || filters.codes.trim() !== ''}\n              />\n              <button\n                onClick={() => setFilters({...filters, noneTag: !filters.noneTag, tag: filters.noneTag ? filters.tag : ''})}\n                className={`btn ${filters.noneTag ? 'btn-primary' : 'btn-secondary'}`}\n                title=\"Show only cards with no tag\"\n                disabled={filters.codes.trim() !== ''}\n              >\n                None Tag\n              </button>\n            </div>\n            {filters.noneTag && !filters.codes.trim() && (\n              <p className=\"text-info\" style={{fontSize: \"0.75rem\", marginTop: \"0.25rem\"}}>\n                Showing only cards with no tag. Tag search is disabled.\n              </p>\n            )}\n            {filters.codes.trim() && (\n              <p className=\"text-gray-500 text-sm mt-1\">\n                Disabled while using code search\n              </p>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Editions:</label>\n            <div className=\"flex flex-wrap gap-2\">\n              {getUniqueEditions().map((edition) => (\n                <button\n                  key={edition}\n                  onClick={() => !filters.codes.trim() && handleEditionChange(edition)}\n                  className={`chip ${\n                    filters.editions.includes(edition)\n                      ? 'chip-blue'\n                      : 'chip-gray'\n                  } ${filters.codes.trim() ? 'opacity-50 cursor-not-allowed' : ''}`}\n                  disabled={filters.codes.trim() !== ''}\n                >\n                  {edition}\n                </button>\n              ))}\n            </div>\n            {filters.codes.trim() && (\n              <p className=\"text-gray-500 text-sm mt-1\">\n                Disabled while using code search\n              </p>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <div className=\"flex flex-wrap mobile-horizontal gap-2\">\n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"morphed\"\n                  name=\"morphed\"\n                  checked={filters.morphed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                  disabled={filters.codes.trim() !== ''}\n                />\n                <label htmlFor=\"morphed\" className={`checkbox-label ${filters.codes.trim() ? 'opacity-50' : ''}`}>\n                  Morphed\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"trimmed\"\n                  name=\"trimmed\"\n                  checked={filters.trimmed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                  disabled={filters.codes.trim() !== ''}\n                />\n                <label htmlFor=\"trimmed\" className={`checkbox-label ${filters.codes.trim() ? 'opacity-50' : ''}`}>\n                  Trimmed\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"frame\"\n                  name=\"frame\"\n                  checked={filters.frame}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                  disabled={filters.codes.trim() !== ''}\n                />\n                <label htmlFor=\"frame\" className={`checkbox-label ${filters.codes.trim() ? 'opacity-50' : ''}`}>\n                  With Frame\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"hasDyeName\"\n                  name=\"hasDyeName\"\n                  checked={filters.hasDyeName}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                  disabled={filters.codes.trim() !== ''}\n                />\n                <label htmlFor=\"hasDyeName\" className={`checkbox-label ${filters.codes.trim() ? 'opacity-50' : ''}`}>\n                  With dye.name\n                </label>\n              </div>\n            </div>\n            {filters.codes.trim() && (\n              <p className=\"text-gray-500 text-sm mt-1\">\n                Disabled while using code search\n              </p>\n            )}\n          </div>\n          \n          <div className=\"flex gap-2 mobile-stack\" style={{marginTop: \"1rem\"}}>\n            <button\n              onClick={applyFilters}\n              className=\"btn btn-primary\"\n            >\n              Apply Filters\n            </button>\n            <button\n              onClick={resetFilters}\n              className=\"btn btn-secondary\"\n            >\n              Reset Filters\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"filter-section-divider\"></div>\n        \n        {/* Exclude filters section */}\n        <div className=\"filter-section\">\n          <h3 className=\"filter-section-title\">Exclude Filters (Blacklist)</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Exclude Series:</label>\n            <input\n              type=\"text\"\n              name=\"blacklistSeries\"\n              value={filters.blacklistSeries}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter series to exclude (comma-separated)\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Exclude Characters:</label>\n            <input\n              type=\"text\"\n              name=\"blacklistCharacter\"\n              value={filters.blacklistCharacter}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter characters to exclude (comma-separated)\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">Exclude Tags:</label>\n            <input\n              type=\"text\"\n              name=\"blacklistTag\"\n              value={filters.blacklistTag}\n              onChange={handleFilterChange}\n              className=\"form-input\"\n              placeholder=\"Enter tags to exclude (comma-separated)\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <div className=\"flex flex-wrap mobile-horizontal gap-2\">\n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeFrame\"\n                  name=\"excludeFrame\"\n                  checked={filters.excludeFrame}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeFrame\" className=\"checkbox-label\">\n                  Exclude Cards with Frame\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeMorphed\"\n                  name=\"excludeMorphed\"\n                  checked={filters.excludeMorphed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeMorphed\" className=\"checkbox-label\">\n                  Exclude Morphed Cards\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeTrimmed\"\n                  name=\"excludeTrimmed\"\n                  checked={filters.excludeTrimmed}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeTrimmed\" className=\"checkbox-label\">\n                  Exclude Trimmed Cards\n                </label>\n              </div>\n              \n              <div className=\"checkbox-container\">\n                <input\n                  type=\"checkbox\"\n                  id=\"excludeDyeName\"\n                  name=\"excludeDyeName\"\n                  checked={filters.excludeDyeName}\n                  onChange={handleFilterChange}\n                  className=\"checkbox\"\n                />\n                <label htmlFor=\"excludeDyeName\" className=\"checkbox-label\">\n                  Exclude Cards with dye.name\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex gap-2 mobile-stack\" style={{marginTop: \"1rem\"}}>\n            <button\n              onClick={applyFilters}\n              className=\"btn btn-primary\"\n            >\n              Apply Filters\n            </button>\n            <button\n              onClick={resetFilters}\n              className=\"btn btn-secondary\"\n            >\n              Reset Filters\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Results section */}\n      <div className=\"card\">\n        {/* Desktop header */}\n        <div className=\"desktop-results\">\n          <div className=\"flex mobile-stack\" style={{justifyContent: \"space-between\", marginBottom: \"1rem\", alignItems: \"flex-start\"}}>\n            <h2>Results {data.length > 0 ? `(${displayData.length}/${filteredData.length})` : \"\"}</h2>\n            <div className=\"flex gap-2 mobile-stack mobile-full-width\">\n              <button\n                onClick={copyCardCodes}\n                disabled={filteredData.length === 0}\n                className={`btn mobile-inline ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-success'\n                }`}\n                title=\"Copy up to 50 codes separated by commas\"\n              >\n                {getCopyButtonText()}\n              </button>\n              <button\n                onClick={copyCardCodesOneLine}\n                disabled={filteredData.length === 0}\n                className={`btn mobile-inline ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-success'\n                }`}\n                title=\"Copy a single code at a time\"\n              >\n                {getSingleCopyButtonText()}\n              </button>\n              <button\n                onClick={downloadCardCodes}\n                disabled={filteredData.length === 0}\n                className={`btn mobile-inline ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-purple'\n                }`}\n                title=\"Download with up to 50 codes per line\"\n              >\n                Download (50 max)\n              </button>\n              <button\n                onClick={downloadCardCodesOneLine}\n                disabled={filteredData.length === 0}\n                className={`btn mobile-inline ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-purple'\n                }`}\n                title=\"Download with one code per line\"\n              >\n                Download (1 per line)\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile header */}\n        <div className=\"mobile-results\">\n          <div className=\"results-header\">\n            <h2>Results {data.length > 0 ? `(${displayData.length}/${filteredData.length})` : \"\"}</h2>\n          </div>\n          \n          {filteredData.length > 0 && (\n            <div className=\"results-actions\">\n              <button\n                onClick={copyCardCodes}\n                disabled={filteredData.length === 0}\n                className={`btn ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-success'\n                }`}\n                title=\"Copy up to 50 codes separated by commas\"\n              >\n                {getCopyButtonText()}\n              </button>\n              <button\n                onClick={copyCardCodesOneLine}\n                disabled={filteredData.length === 0}\n                className={`btn ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-success'\n                }`}\n                title=\"Copy a single code at a time\"\n              >\n                {getSingleCopyButtonText()}\n              </button>\n              <button\n                onClick={downloadCardCodes}\n                disabled={filteredData.length === 0}\n                className={`btn ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-purple'\n                }`}\n                title=\"Download with up to 50 codes per line\"\n              >\n                Download (50 max)\n              </button>\n              <button\n                onClick={downloadCardCodesOneLine}\n                disabled={filteredData.length === 0}\n                className={`btn ${\n                  filteredData.length === 0\n                    ? 'btn-secondary'\n                    : 'btn-purple'\n                }`}\n                title=\"Download with one code per line\"\n              >\n                Download (1 per line)\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Results content */}\n        {displayData.length > 0 ? (\n          <>\n            {/* Desktop table view */}\n            <div className=\"desktop-results\">\n              <div className=\"table-container\" style={{overflowX: \"auto\", maxHeight: \"500px\", overflowY: \"auto\"}}>\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th onClick={() => handleSort('code')} className=\"sortable-header\">\n                        Code {sortField === 'code' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('number')} className=\"sortable-header\">\n                        Number {sortField === 'number' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('edition')} className=\"sortable-header\">\n                        Edition {sortField === 'edition' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('character')} className=\"sortable-header\">\n                        Character {sortField === 'character' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('series')} className=\"sortable-header\">\n                        Series {sortField === 'series' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('quality')} className=\"sortable-header\">\n                        Quality {sortField === 'quality' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('wishlists')} className=\"sortable-header\">\n                        Wishlists {sortField === 'wishlists' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('worker.effort')} className=\"sortable-header\">\n                        Worker Effort {sortField === 'worker.effort' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('frame')} className=\"sortable-header\">\n                        Frame {sortField === 'frame' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                      <th onClick={() => handleSort('tag')} className=\"sortable-header\">\n                        Tag {sortField === 'tag' && <span>{sortDirection === 'asc' ? '▲' : '▼'}</span>}\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {getCurrentPageItems().map((card, index) => (\n                      <tr key={index}>\n                        <td style={{color: \"#3b82f6\", fontWeight: 500}}>{card.code}</td>\n                        <td>{card.number}</td>\n                        <td>{card.edition}</td>\n                        <td>{card.character}</td>\n                        <td>{card.series}</td>\n                        <td>{card.quality}</td>\n                        <td>{card.wishlists}</td>\n                        <td>{card['worker.effort'] || \"0\"}</td>\n                        <td>{card.frame || \"—\"}</td>\n                        <td>{card.tag}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* Mobile card view */}\n            <div className=\"mobile-results\">\n              {/* Mobile sorting controls */}\n              <div className=\"mobile-sort-controls\">\n                <button\n                  onClick={() => handleSort('code')}\n                  className={`mobile-sort-button ${sortField === 'code' ? 'active' : ''}`}\n                >\n                  Code\n                  {sortField === 'code' && (\n                    <span className=\"mobile-sort-icon\">\n                      {sortDirection === 'asc' ? '▲' : '▼'}\n                    </span>\n                  )}\n                </button>\n                <button\n                  onClick={() => handleSort('number')}\n                  className={`mobile-sort-button ${sortField === 'number' ? 'active' : ''}`}\n                >\n                  Number\n                  {sortField === 'number' && (\n                    <span className=\"mobile-sort-icon\">\n                      {sortDirection === 'asc' ? '▲' : '▼'}\n                    </span>\n                  )}\n                </button>\n                <button\n                  onClick={() => handleSort('character')}\n                  className={`mobile-sort-button ${sortField === 'character' ? 'active' : ''}`}\n                >\n                  Character\n                  {sortField === 'character' && (\n                    <span className=\"mobile-sort-icon\">\n                      {sortDirection === 'asc' ? '▲' : '▼'}\n                    </span>\n                  )}\n                </button>\n                <button\n                  onClick={() => handleSort('series')}\n                  className={`mobile-sort-button ${sortField === 'series' ? 'active' : ''}`}\n                >\n                  Series\n                  {sortField === 'series' && (\n                    <span className=\"mobile-sort-icon\">\n                      {sortDirection === 'asc' ? '▲' : '▼'}\n                    </span>\n                  )}\n                </button>\n                <button\n                  onClick={() => handleSort('wishlists')}\n                  className={`mobile-sort-button ${sortField === 'wishlists' ? 'active' : ''}`}\n                >\n                  Wishlists\n                  {sortField === 'wishlists' && (\n                    <span className=\"mobile-sort-icon\">\n                      {sortDirection === 'asc' ? '▲' : '▼'}\n                    </span>\n                  )}\n                </button>\n                <button\n                  onClick={() => handleSort('quality')}\n                  className={`mobile-sort-button ${sortField === 'quality' ? 'active' : ''}`}\n                >\n                  Quality\n                  {sortField === 'quality' && (\n                    <span className=\"mobile-sort-icon\">\n                      {sortDirection === 'asc' ? '▲' : '▼'}\n                    </span>\n                  )}\n                </button>\n              </div>\n              \n              {renderMobileCards()}\n            </div>\n          </>\n        ) : (\n          <p style={{textAlign: \"center\", padding: \"1rem\"}}>\n            {file || csvUrl ? \"No results matching the filter criteria.\" : \"No data loaded. Please upload a file or provide a CSV URL to see results.\"}\n          </p>\n        )}\n\n        {/* Pagination controls */}\n        {displayData.length > 0 && (\n          <>\n            {/* Desktop pagination */}\n            <div className=\"desktop-results\">\n              <div className=\"pagination-container\" style={{marginTop: \"1rem\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"0.75rem\"}}>\n                <button \n                  onClick={goToFirstPage} \n                  disabled={currentPage === 1}\n                  className={`btn ${currentPage === 1 ? 'btn-secondary' : 'btn-primary'}`}\n                  title=\"First Page\"\n                >\n                  &laquo;\n                </button>\n                <button \n                  onClick={goToPreviousPage} \n                  disabled={currentPage === 1}\n                  className={`btn ${currentPage === 1 ? 'btn-secondary' : 'btn-primary'}`}\n                  title=\"Previous Page\"\n                >\n                  &lsaquo;\n                </button>\n                \n                <div style={{display: \"flex\", alignItems: \"center\", gap: \"0.5rem\"}}>\n                  <span>Page</span>\n                  <input \n                    type=\"number\" \n                    min=\"1\" \n                    max={totalPages} \n                    value={currentPage}\n                    onChange={handlePageInput}\n                    style={{width: \"50px\", textAlign: \"center\", padding: \"0.25rem\"}}\n                    className=\"form-input\"\n                  />\n                  <span>of {totalPages}</span>\n                </div>\n                \n                <button \n                  onClick={goToNextPage} \n                  disabled={currentPage === totalPages}\n                  className={`btn ${currentPage === totalPages ? 'btn-secondary' : 'btn-primary'}`}\n                  title=\"Next Page\"\n                >\n                  &rsaquo;\n                </button>\n                <button \n                  onClick={goToLastPage} \n                  disabled={currentPage === totalPages}\n                  className={`btn ${currentPage === totalPages ? 'btn-secondary' : 'btn-primary'}`}\n                  title=\"Last Page\"\n                >\n                  &raquo;\n                </button>\n                \n                <div style={{marginLeft: \"1rem\", display: \"flex\", alignItems: \"center\", gap: \"0.5rem\"}}>\n                  <span>Show</span>\n                  <select \n                    value={itemsPerPage} \n                    onChange={handleItemsPerPageChange}\n                    className=\"form-input\"\n                    style={{padding: \"0.25rem\"}}\n                  >\n                    <option value=\"5\">5</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                  <span>per page</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Mobile pagination */}\n            <div className=\"mobile-results\">\n              <div className=\"pagination-container\" style={{marginTop: \"1rem\"}}>\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", gap: \"0.5rem\", marginBottom: \"1rem\"}}>\n                  <button \n                    onClick={goToFirstPage} \n                    disabled={currentPage === 1}\n                    className={`btn ${currentPage === 1 ? 'btn-secondary' : 'btn-primary'}`}\n                    title=\"First Page\"\n                  >\n                    &laquo;\n                  </button>\n                  <button \n                    onClick={goToPreviousPage} \n                    disabled={currentPage === 1}\n                    className={`btn ${currentPage === 1 ? 'btn-secondary' : 'btn-primary'}`}\n                    title=\"Previous Page\"\n                  >\n                    &lsaquo;\n                  </button>\n                  \n                  <div style={{display: \"flex\", alignItems: \"center\", gap: \"0.5rem\"}}>\n                    <span>Page</span>\n                    <input \n                      type=\"number\" \n                      min=\"1\" \n                      max={totalPages} \n                      value={currentPage}\n                      onChange={handlePageInput}\n                      style={{width: \"60px\", textAlign: \"center\"}}\n                      className=\"form-input\"\n                    />\n                    <span>of {totalPages}</span>\n                  </div>\n                  \n                  <button \n                    onClick={goToNextPage} \n                    disabled={currentPage === totalPages}\n                    className={`btn ${currentPage === totalPages ? 'btn-secondary' : 'btn-primary'}`}\n                    title=\"Next Page\"\n                  >\n                    &rsaquo;\n                  </button>\n                  <button \n                    onClick={goToLastPage} \n                    disabled={currentPage === totalPages}\n                    className={`btn ${currentPage === totalPages ? 'btn-secondary' : 'btn-primary'}`}\n                    title=\"Last Page\"\n                  >\n                    &raquo;\n                  </button>\n                </div>\n                \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", gap: \"0.5rem\"}}>\n                  <span>Show</span>\n                  <select \n                    value={itemsPerPage} \n                    onChange={handleItemsPerPageChange}\n                    className=\"form-input\"\n                    style={{minWidth: \"80px\"}}\n                  >\n                    <option value=\"5\">5</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                  <span>per page</span>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n        \n        {filteredData.length !== displayData.length && (\n          <p style={{fontSize: \"0.875rem\", marginTop: \"0.5rem\", color: \"#3b82f6\", textAlign: \"center\"}}>\n            Displaying only {displayData.length} of {filteredData.length} records (remaining have already been copied).\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CardFilterApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}